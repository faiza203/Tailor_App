[{"/home/faiza/Documents/Git Hub/tailor_app/src/index.tsx":"1","/home/faiza/Documents/Git Hub/tailor_app/src/components/index.tsx":"2","/home/faiza/Documents/Git Hub/tailor_app/src/components/Home.tsx":"3","/home/faiza/Documents/Git Hub/tailor_app/src/components/SignIn.tsx":"4","/home/faiza/Documents/Git Hub/tailor_app/src/components/Nav.tsx":"5","/home/faiza/Documents/Git Hub/tailor_app/src/components/firebase.tsx":"6","/home/faiza/Documents/Git Hub/tailor_app/src/components/NotFound.tsx":"7","/home/faiza/Documents/Git Hub/tailor_app/src/components/AddMeasurment.tsx":"8","/home/faiza/Documents/Git Hub/tailor_app/src/components/history.tsx":"9","/home/faiza/Documents/Git Hub/tailor_app/src/components/store.tsx":"10","/home/faiza/Documents/Git Hub/tailor_app/src/components/SignUp.tsx":"11","/home/faiza/Documents/Git Hub/tailor_app/src/components/Customers.tsx":"12","/home/faiza/Documents/Git Hub/tailor_app/src/components/DashBoard.tsx":"13","/home/faiza/Documents/Git Hub/tailor_app/src/components/reducer.tsx":"14","/home/faiza/Documents/Git Hub/tailor_app/src/App.tsx":"15","/home/faiza/Documents/Git Hub/tailor_app/src/components/AddDetail.tsx":"16","/home/faiza/Documents/Git Hub/tailor_app/src/components/AddOrder.tsx":"17","/home/faiza/Documents/Git Hub/tailor_app/src/components/AlreadyMeasurment.tsx":"18","/home/faiza/Documents/Git Hub/tailor_app/src/components/Condition.tsx":"19"},{"size":330,"mtime":1606992343000,"results":"20","hashOfConfig":"21"},{"size":754,"mtime":1607420793201,"results":"22","hashOfConfig":"21"},{"size":656,"mtime":1606992343000,"results":"23","hashOfConfig":"21"},{"size":1495,"mtime":1607253723659,"results":"24","hashOfConfig":"21"},{"size":1042,"mtime":1606992343000,"results":"25","hashOfConfig":"21"},{"size":562,"mtime":1606992343000,"results":"26","hashOfConfig":"21"},{"size":595,"mtime":1607251724440,"results":"27","hashOfConfig":"21"},{"size":1548,"mtime":1607327280726,"results":"28","hashOfConfig":"21"},{"size":95,"mtime":1607326904207,"results":"29","hashOfConfig":"21"},{"size":8928,"mtime":1607420997406,"results":"30","hashOfConfig":"21"},{"size":1739,"mtime":1607163312758,"results":"31","hashOfConfig":"21"},{"size":1665,"mtime":1607243828756,"results":"32","hashOfConfig":"21"},{"size":1704,"mtime":1607264523633,"results":"33","hashOfConfig":"21"},{"size":2262,"mtime":1607421068810,"results":"34","hashOfConfig":"21"},{"size":805,"mtime":1607251578989,"results":"35","hashOfConfig":"21"},{"size":2484,"mtime":1607418659281,"results":"36","hashOfConfig":"21"},{"size":1447,"mtime":1607416761399,"results":"37","hashOfConfig":"21"},{"size":1400,"mtime":1607259565223,"results":"38","hashOfConfig":"21"},{"size":2883,"mtime":1607421282606,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"34fyjp",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/faiza/Documents/Git Hub/tailor_app/src/index.tsx",[],["86","87"],"/home/faiza/Documents/Git Hub/tailor_app/src/components/index.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/Home.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/SignIn.tsx",["88","89"],"import React, { Component } from 'react';\nimport firebase from 'firebase';\nimport { history } from './history';\nimport { useDispatch } from 'react-redux';\nimport { addTailor } from './store';\n\n\n\nexport function SignIn() {\n  const dispatch = useDispatch();\n  const signIn = (e: any) => {\n    e.preventDefault();\n    const [email, password]: any[] = e.target;\n    const auth = firebase.auth();\n    const promise = auth.signInWithEmailAndPassword(email.value, password.value)\n      .then(() => {\n        sendToFirebaseTailor(e)\n      })\n      .catch((err) => {\n        alert(err.message);\n      })\n  }\n\n  const sendToFirebaseTailor = (e: any) => {\n    const promise = firebase.database().ref().set({ signIn: e.target[0].value })\n    promise.then(() => {\n      dispatch(addTailor(e.target[0].value));\n      localStorage.setItem(\"tailor\" , e.target[0].value)\n      alert(\"Account is login successfully !!!\");\n      history.push('/DashBoard');\n      history.replace('/DashBoard');\n    })\n      .catch((err: any) => {\n        alert(err.message);\n      })\n  }\n  return (\n    <form onSubmit={signIn}>\n      <label className=\"text-dark\">Email :</label>\n      <input className=\"form-control\" type=\"email\" placeholder=\"Please write email here\" required />\n      <label className=\"text-dark\">Password :</label>\n      <input className=\"form-control\" type=\"password\" placeholder=\"Enter password here\" required />\n      <button className=\"btn btn-outline-danger\" type=\"submit\">Sign In</button>\n    </form>\n  )\n}","/home/faiza/Documents/Git Hub/tailor_app/src/components/Nav.tsx",["90"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nexport class Nav extends Component {\n    render() {\n        return (\n            <div className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                <a className=\"navbar-brand\">Navbar</a>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item active\">\n                            <Link to=\"/\" className=\"nav-link\">Home <span className=\"sr-only\">(current)</span></Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to=\"/SignUp\" className=\"nav-link\">Sign Up</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to=\"/SignIn\" className=\"nav-link\">Sign In</Link>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n","/home/faiza/Documents/Git Hub/tailor_app/src/components/firebase.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/NotFound.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/AddMeasurment.tsx",["91","92"],"import React, { useState } from 'react';\nimport firebase from 'firebase';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { checkFirebaseMeasurment } from './index';\nimport { checkOrder } from './store';\nexport function AddMeasurment(props: any) {\n    const tailor: any = localStorage.getItem(\"tailor\");\n    const dispatch = useDispatch();\n    const customerState = useSelector((state: any) => state);\n    const promise = () => {\n        firebase.firestore().collection('Tailor App').doc(tailor).collection(\"Measurment\").get()\n            .then(snapshot => {\n                snapshot.docs.forEach(client => {\n                    const clientName = client.id;\n                    const measurment = client.data().measurmentEle;\n                    checkFirebaseMeasurment(clientName, measurment, dispatch, customerState.measurment)\n                })\n            }).catch()\n    }\n    promise();\n    return (\n\n        <div className=\"mr-5\">\n            <input className=\"form-control\" type=\"number\" placeholder=\"Length\" required />\n            <input className=\"form-control mt-1\" type=\"number\" placeholder=\"Width\" required />\n            <input className=\"form-control mt-1\" type=\"number\" placeholder=\"Neck\" required />\n            <input className=\"form-control mt-1\" type=\"number\" placeholder=\"Waist\" required />\n            <input className=\"form-control mt-1\" type=\"number\" placeholder=\"Middle\" required />\n            <input className=\"form-control mt-1\" type=\"number\" placeholder=\"Leg Lenght\" required />\n        </div>\n    )\n}\n","/home/faiza/Documents/Git Hub/tailor_app/src/components/history.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/store.tsx",["93"],"/home/faiza/Documents/Git Hub/tailor_app/src/components/SignUp.tsx",["94"],"import React from 'react';\nimport firebase from 'firebase';\nimport { configFirebase } from './firebase';\nimport { history } from './history';\nimport { useDispatch } from 'react-redux';\nimport { addTailor } from './store';\n\nconfigFirebase();\n\nexport function SignUp() {\n    const dispatch = useDispatch();\n    const signUpFun = (e: any) => {\n        e.preventDefault();\n        const [email, password, confirmPassword]: any[] = e.target;\n        const auth = firebase.auth();\n        if (password.value !== confirmPassword.value) {\n            alert(\"Password does not match\");\n        }\n        else {\n            const promise = auth.createUserWithEmailAndPassword(email.value, password.value)\n                .then((user) => {\n                    alert(\"Account is created successfully !!!\");\n                    dispatch(addTailor(user.user?.email))\n                    history.push('/SignIn');\n                    history.replace('./SignIn')\n                })\n                .catch((err) => {\n                    alert(err.message);\n                })\n        }\n    }\n    return (\n        <form onSubmit={signUpFun}>\n            <label className=\"text-dark\">Email :</label>\n            <input className=\"form-control\" type=\"email\" placeholder=\"Please write email here\" required />\n            <label className=\"text-dark\">Password :</label>\n            <input className=\"form-control\" type=\"password\" placeholder=\"Enter password here\" required />\n            <label className=\"text-dark\">Confirm Password :</label>\n            <input className=\"form-control\" type=\"password\" placeholder=\"Rewrite password here\" required />\n            <button className=\"btn btn-outline-warning\" type=\"submit\">SignUp</button>\n        </form>\n    )\n}\n","/home/faiza/Documents/Git Hub/tailor_app/src/components/Customers.tsx",["95","96"],"import React from \"react\";\nimport { useSelector } from 'react-redux';\nimport firebase from 'firebase';\nimport { history } from './index';\nimport { useDispatch } from 'react-redux';\nimport { addCustomerR, checkCustomer, checkCustomerFirebase } from \"./store\";\n\n\nexport const Customers = (props: any) => {\n    const customerState = useSelector((state: any) => state);\n    const dispatch = useDispatch();\n    const promise = () => {\n        firebase.firestore().collection('Tailor App').doc('Tailor').collection(props.name).get()\n            .then(snapshot => {\n                snapshot.docs.forEach(clients => {\n                    const client = clients.data().id;\n                    checkCustomerFirebase(client, customerState.clients, dispatch)\n                }\n                )\n            }).catch()\n    }\n    promise();\n    return (\n        <div>\n            <h2 className=\"h2 text-muted\">Customers</h2>\n            {\n                customerState.clients.length > 0 ?\n                    customerState.clients.map((customer: any, index: number) => {\n                        return (<div key={index}><h3 className=\"h3 text-muted d-inline mt-2\">{customer}</h3>\n                            <button id={customer + \"measurment\"} className=\"btn btn-outline-success d-inline\" onClick={() => {\n                                localStorage.setItem(\"customer\", customer);\n                                history.push(\"/AddDetail\");\n                                history.replace(\"/AddDetail\")\n                            }}>Edit Detail</button>\n                        </div>)\n                    }) :\n                    null\n            }\n        </div>\n    );\n};\n","/home/faiza/Documents/Git Hub/tailor_app/src/components/DashBoard.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/reducer.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/App.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/AddDetail.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/AddOrder.tsx",["97"],"import React from 'react';\nimport firebase from 'firebase';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { checkOrderFirebase } from './index';\nexport const AddOrder = (props: any) => {\n    const dispatch = useDispatch();\n    const customerState = useSelector((state: any) => state);\n    const tailor: any = localStorage.getItem(\"tailor\");\n    const promise = () => {\n        firebase.firestore().collection('Tailor App').doc(tailor).collection(\"Orders\").get()\n            .then(snapshot => {\n                snapshot.docs.forEach(client => {\n                    const clientName = client.id;\n                    const orders = client.data().orders;\n\n                    checkOrderFirebase(clientName, orders, customerState.orders, dispatch)\n                })\n            });\n    }\n    promise();\n\n    return (<div>\n        <h1 className=\"h1 text-muted\">Orders</h1>\n        <p className=\"text-muted\">If you want to stitch new dress: </p>\n        <input className=\"d-inline form-control\" type=\"text\" placeholder=\"Add number of orders here\" />\n        {customerState.orders.length > 0 ?\n            customerState.orders.map((order: any[], index: number) => {\n                if (order[0] === props.client) {\n                    return (\n                        <p key={index} className=\"text-muted\">Already Orders are {order[1]}</p>\n                    )\n                }\n            }) :\n            null\n        }\n    </div>)\n}","/home/faiza/Documents/Git Hub/tailor_app/src/components/AlreadyMeasurment.tsx",["98"],"import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { AddMeasurment } from './index';\nexport function AlreadyMeasurment(props: any) {\n    const customerState = useSelector((state: any) => state);\n    return (\n        <div >\n            <h1 className=\"h1 text-muted\">Measurment</h1>\n            <div id=\"Measurment\">\n                {customerState.measurment.length > 0 ?\n                    customerState.measurment.map((measurment: any[], index: number) => {\n                        if (measurment[0] === props.client) {\n                            return (<ul key={index} className=\"mr-5\">\n                                <li className=\"text-muted\"> Length : {measurment[1].Length}</li>\n                                <li className=\"text-muted\"> Width : {measurment[1].Width}</li>\n                                <li className=\"text-muted\"> Neck : {measurment[1].Neck}</li>\n                                <li className=\"text-muted\"> Waist : {measurment[1].Waist}</li>\n                                <li className=\"text-muted\"> Middle : {measurment[1].Middle}</li>\n                                <li className=\"text-muted\"> Leg Lenght : {measurment[1].LegLenght}</li>\n                            </ul>)\n                     }\n                     }) :\n                    null\n                }\n                <AddMeasurment/>\n            </div>\n        </div>\n    )\n}\n","/home/faiza/Documents/Git Hub/tailor_app/src/components/Condition.tsx",["99","100"],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":26},{"ruleId":"105","severity":1,"message":"109","line":15,"column":11,"nodeType":"107","messageId":"108","endLine":15,"endColumn":18},{"ruleId":"110","severity":1,"message":"111","line":7,"column":17,"nodeType":"112","endLine":7,"endColumn":45},{"ruleId":"105","severity":1,"message":"113","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":25},{"ruleId":"105","severity":1,"message":"114","line":5,"column":10,"nodeType":"107","messageId":"108","endLine":5,"endColumn":20},{"ruleId":"105","severity":1,"message":"109","line":174,"column":15,"nodeType":"107","messageId":"108","endLine":174,"endColumn":22},{"ruleId":"105","severity":1,"message":"109","line":20,"column":19,"nodeType":"107","messageId":"108","endLine":20,"endColumn":26},{"ruleId":"105","severity":1,"message":"115","line":6,"column":10,"nodeType":"107","messageId":"108","endLine":6,"endColumn":22},{"ruleId":"105","severity":1,"message":"116","line":6,"column":24,"nodeType":"107","messageId":"108","endLine":6,"endColumn":37},{"ruleId":"117","severity":1,"message":"118","line":27,"column":68,"nodeType":"119","messageId":"120","endLine":27,"endColumn":70},{"ruleId":"117","severity":1,"message":"118","line":11,"column":85,"nodeType":"119","messageId":"120","endLine":11,"endColumn":87},{"ruleId":"117","severity":1,"message":"118","line":43,"column":77,"nodeType":"119","messageId":"120","endLine":43,"endColumn":79},{"ruleId":"117","severity":1,"message":"118","line":55,"column":81,"nodeType":"119","messageId":"120","endLine":55,"endColumn":83},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"@typescript-eslint/no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'promise' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'checkOrder' is defined but never used.","'addCustomerR' is defined but never used.","'checkCustomer' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]