[{"/home/faiza/Documents/GitHub/tailor_app/src/index.tsx":"1","/home/faiza/Documents/GitHub/tailor_app/src/components/Home.tsx":"2","/home/faiza/Documents/GitHub/tailor_app/src/components/Nav.tsx":"3","/home/faiza/Documents/GitHub/tailor_app/src/components/NotFound.tsx":"4","/home/faiza/Documents/GitHub/tailor_app/src/components/index.tsx":"5","/home/faiza/Documents/GitHub/tailor_app/src/components/SignUp.tsx":"6"},{"size":219,"mtime":1606558765348,"results":"7","hashOfConfig":"8"},{"size":648,"mtime":1606558765348,"results":"9","hashOfConfig":"8"},{"size":1354,"mtime":1606558765348,"results":"10","hashOfConfig":"8"},{"size":457,"mtime":1606558765348,"results":"11","hashOfConfig":"8"},{"size":202,"mtime":1606558765348,"results":"12","hashOfConfig":"8"},{"size":1819,"mtime":1606560789471,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1pe7fxr",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"/home/faiza/Documents/GitHub/tailor_app/src/index.tsx",[],"/home/faiza/Documents/GitHub/tailor_app/src/components/Home.tsx",[],"/home/faiza/Documents/GitHub/tailor_app/src/components/Nav.tsx",["27"],"/home/faiza/Documents/GitHub/tailor_app/src/components/NotFound.tsx",[],"/home/faiza/Documents/GitHub/tailor_app/src/components/index.tsx",[],"/home/faiza/Documents/GitHub/tailor_app/src/components/SignUp.tsx",["28"],"import React, { Component } from 'react';\nimport firebase from 'firebase';\nimport { configFirebase } from './firebase';\nimport { createBrowserHistory as createHistory } from 'history'\nconst history = createHistory();\nconfigFirebase();\nconst signUp = (e : any) => {\n    e.preventDefault();\n    const[email , password , confirmPassword] : any[] = e.target;\nconst auth  = firebase.auth();\nif(password.value !== confirmPassword.value){\n    alert(\"Password does not match\");\n}          \nelse{\n  const   promise = auth.createUserWithEmailAndPassword(email.value, password.value)\n  .then(() => {\n      sendToFirebaseTailor(e);\n})\n  .catch((err : any) => {\n    alert(err.message);\n    })\n}\n}\nconst sendToFirebaseTailor = (e : any)=>{\n    const promise = firebase.firestore().collection('tailors').doc(e.target[0].value).collection('customers').add({\n        id1 : \"id1\"\n    });\n    promise.then(() => {\n      alert(\"Account is created successfully !!!\");\n      history.push('/SignIn')  \n  })\n    .catch((err : any) => {\n      alert(err.message);\n      })\n}\nexport class  SignUp extends Component {\n    render(){\n        return (\n            <form onSubmit={signUp}>\n                <label className=\"text-dark\">Email :</label>\n                <input  className=\"form-control\" type=\"email\" placeholder=\"Please write email here\" required />\n                <label className=\"text-dark\">Password :</label>\n                <input  className=\"form-control\" type=\"password\" placeholder=\"Enter password here\" required />\n                <label className=\"text-dark\">Confirm Password :</label>\n                <input  className=\"form-control\" type=\"password\" placeholder=\"Rewrite password here\" required />\n                <button  className=\"btn btn-outline-warning\" type=\"submit\">SignUp</button>\n            </form>\n        )\n    }\n}",{"ruleId":"29","severity":1,"message":"30","line":7,"column":17,"nodeType":"31","endLine":7,"endColumn":45},{"ruleId":"32","severity":1,"message":"33","line":15,"column":11,"nodeType":"34","messageId":"35","endLine":15,"endColumn":18},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","@typescript-eslint/no-unused-vars","'promise' is assigned a value but never used.","Identifier","unusedVar"]