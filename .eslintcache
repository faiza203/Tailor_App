[{"/home/faiza/Documents/Git Hub/tailor_app/src/index.tsx":"1","/home/faiza/Documents/Git Hub/tailor_app/src/components/index.tsx":"2","/home/faiza/Documents/Git Hub/tailor_app/src/components/Home.tsx":"3","/home/faiza/Documents/Git Hub/tailor_app/src/components/SignIn.tsx":"4","/home/faiza/Documents/Git Hub/tailor_app/src/components/Nav.tsx":"5","/home/faiza/Documents/Git Hub/tailor_app/src/components/firebase.tsx":"6","/home/faiza/Documents/Git Hub/tailor_app/src/components/NotFound.tsx":"7","/home/faiza/Documents/Git Hub/tailor_app/src/components/AddMeasurment.tsx":"8","/home/faiza/Documents/Git Hub/tailor_app/src/components/history.tsx":"9","/home/faiza/Documents/Git Hub/tailor_app/src/components/store.tsx":"10","/home/faiza/Documents/Git Hub/tailor_app/src/components/SignUp.tsx":"11","/home/faiza/Documents/Git Hub/tailor_app/src/components/Customers.tsx":"12","/home/faiza/Documents/Git Hub/tailor_app/src/components/DashBoard.tsx":"13","/home/faiza/Documents/Git Hub/tailor_app/src/components/reducer.tsx":"14","/home/faiza/Documents/Git Hub/tailor_app/src/App.tsx":"15","/home/faiza/Documents/Git Hub/tailor_app/src/components/AddDetail.tsx":"16","/home/faiza/Documents/Git Hub/tailor_app/src/components/AddOrder.tsx":"17","/home/faiza/Documents/Git Hub/tailor_app/src/components/AlreadyMeasurment.tsx":"18","/home/faiza/Documents/Git Hub/tailor_app/src/components/Condition.tsx":"19"},{"size":330,"mtime":1606992343000,"results":"20","hashOfConfig":"21"},{"size":716,"mtime":1607416720996,"results":"22","hashOfConfig":"21"},{"size":656,"mtime":1606992343000,"results":"23","hashOfConfig":"21"},{"size":1495,"mtime":1607253723659,"results":"24","hashOfConfig":"21"},{"size":1042,"mtime":1606992343000,"results":"25","hashOfConfig":"21"},{"size":562,"mtime":1606992343000,"results":"26","hashOfConfig":"21"},{"size":595,"mtime":1607251724440,"results":"27","hashOfConfig":"21"},{"size":1548,"mtime":1607327280726,"results":"28","hashOfConfig":"21"},{"size":95,"mtime":1607326904207,"results":"29","hashOfConfig":"21"},{"size":6866,"mtime":1607417737541,"results":"30","hashOfConfig":"21"},{"size":1739,"mtime":1607163312758,"results":"31","hashOfConfig":"21"},{"size":1665,"mtime":1607243828756,"results":"32","hashOfConfig":"21"},{"size":1704,"mtime":1607264523633,"results":"33","hashOfConfig":"21"},{"size":1880,"mtime":1607417694095,"results":"34","hashOfConfig":"21"},{"size":805,"mtime":1607251578989,"results":"35","hashOfConfig":"21"},{"size":2338,"mtime":1607417438353,"results":"36","hashOfConfig":"21"},{"size":1447,"mtime":1607416761399,"results":"37","hashOfConfig":"21"},{"size":1400,"mtime":1607259565223,"results":"38","hashOfConfig":"21"},{"size":1824,"mtime":1607417620654,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"34fyjp",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"42"},"/home/faiza/Documents/Git Hub/tailor_app/src/index.tsx",[],["88","89"],"/home/faiza/Documents/Git Hub/tailor_app/src/components/index.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/Home.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/SignIn.tsx",["90","91"],"import React, { Component } from 'react';\nimport firebase from 'firebase';\nimport { history } from './history';\nimport { useDispatch } from 'react-redux';\nimport { addTailor } from './store';\n\n\n\nexport function SignIn() {\n  const dispatch = useDispatch();\n  const signIn = (e: any) => {\n    e.preventDefault();\n    const [email, password]: any[] = e.target;\n    const auth = firebase.auth();\n    const promise = auth.signInWithEmailAndPassword(email.value, password.value)\n      .then(() => {\n        sendToFirebaseTailor(e)\n      })\n      .catch((err) => {\n        alert(err.message);\n      })\n  }\n\n  const sendToFirebaseTailor = (e: any) => {\n    const promise = firebase.database().ref().set({ signIn: e.target[0].value })\n    promise.then(() => {\n      dispatch(addTailor(e.target[0].value));\n      localStorage.setItem(\"tailor\" , e.target[0].value)\n      alert(\"Account is login successfully !!!\");\n      history.push('/DashBoard');\n      history.replace('/DashBoard');\n    })\n      .catch((err: any) => {\n        alert(err.message);\n      })\n  }\n  return (\n    <form onSubmit={signIn}>\n      <label className=\"text-dark\">Email :</label>\n      <input className=\"form-control\" type=\"email\" placeholder=\"Please write email here\" required />\n      <label className=\"text-dark\">Password :</label>\n      <input className=\"form-control\" type=\"password\" placeholder=\"Enter password here\" required />\n      <button className=\"btn btn-outline-danger\" type=\"submit\">Sign In</button>\n    </form>\n  )\n}","/home/faiza/Documents/Git Hub/tailor_app/src/components/Nav.tsx",["92"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nexport class Nav extends Component {\n    render() {\n        return (\n            <div className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                <a className=\"navbar-brand\">Navbar</a>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item active\">\n                            <Link to=\"/\" className=\"nav-link\">Home <span className=\"sr-only\">(current)</span></Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to=\"/SignUp\" className=\"nav-link\">Sign Up</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to=\"/SignIn\" className=\"nav-link\">Sign In</Link>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n","/home/faiza/Documents/Git Hub/tailor_app/src/components/firebase.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/NotFound.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/AddMeasurment.tsx",["93","94"],"import React, { useState } from 'react';\nimport firebase from 'firebase';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { checkFirebaseMeasurment } from './index';\nimport { checkOrder } from './store';\nexport function AddMeasurment(props: any) {\n    const tailor: any = localStorage.getItem(\"tailor\");\n    const dispatch = useDispatch();\n    const customerState = useSelector((state: any) => state);\n    const promise = () => {\n        firebase.firestore().collection('Tailor App').doc(tailor).collection(\"Measurment\").get()\n            .then(snapshot => {\n                snapshot.docs.forEach(client => {\n                    const clientName = client.id;\n                    const measurment = client.data().measurmentEle;\n                    checkFirebaseMeasurment(clientName, measurment, dispatch, customerState.measurment)\n                })\n            }).catch()\n    }\n    promise();\n    return (\n\n        <div className=\"mr-5\">\n            <input className=\"form-control\" type=\"number\" placeholder=\"Length\" required />\n            <input className=\"form-control mt-1\" type=\"number\" placeholder=\"Width\" required />\n            <input className=\"form-control mt-1\" type=\"number\" placeholder=\"Neck\" required />\n            <input className=\"form-control mt-1\" type=\"number\" placeholder=\"Waist\" required />\n            <input className=\"form-control mt-1\" type=\"number\" placeholder=\"Middle\" required />\n            <input className=\"form-control mt-1\" type=\"number\" placeholder=\"Leg Lenght\" required />\n        </div>\n    )\n}\n","/home/faiza/Documents/Git Hub/tailor_app/src/components/history.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/store.tsx",["95"],"import { createStore } from 'redux';\nimport TailorReducer from './reducer';\nimport { v4 as uuid } from 'uuid';\nimport firebase from 'firebase';\nexport const store = createStore(TailorReducer);\nexport function addTailor(tailor: any) {\n    return {\n        type: \"Add_Tailor\",\n        tailor\n    }\n}\n\nexport const checkCustomer = (client: any, customerStateClient: any, dispatch: any) => {\n    let arr = [];\n    if (customerStateClient.length > 0) {\n        customerStateClient.forEach((customer: any) => {\n            if (customer !== client) {\n                arr.push(\"yes\");\n            }\n        })\n    }\n    if (arr.length === customerStateClient.length) {\n        dispatch(addCustomerR(client))\n    }\n    else {\n        alert(\"You have already this user\")\n    }\n}\n\nexport function addCustomerR(customer: any) {\n    firebase.database().ref().on(\"child_added\", snap => {\n        const tailor = snap.val();\n        const promise = firebase.firestore().collection('Tailor App').doc('Tailor').collection(tailor).doc(uuid()).set({\n            id: customer\n        });\n        promise.then(() => {\n        })\n        promise.catch((err) => {\n            alert(err.message)\n        })\n    });\n    return {\n        type: \"Add_Customer\",\n        customer,\n    }\n}\n\n\nexport function checkCustomerFirebase(client: any, customerStateClient: any, dispatch: any) {\n    let arr = [];\n    if (customerStateClient.length > 0) {\n        customerStateClient.forEach((customer: any) => {\n            if (customer !== client) {\n                arr.push(\"yes\");\n            }\n        })\n    }\n    if (arr.length === customerStateClient.length) {\n        dispatch(addFirebaseCustomer(client))\n    }\n}\n\nexport function addFirebaseCustomer(client: any) {\n    return {\n        type: \"Fecth_Customer\",\n        client\n    }\n}\n\nexport const checkMeasurment = (client: any, measurment: any, dispatch: any, customerStateMeasurment: any) => {\n    if (client !== undefined) {\n        if (customerStateMeasurment.length > 0) {\n            customerStateMeasurment.forEach((customer: any, index: number) => {\n                if (customer[0] === client) {\n                    dispatch(updateMeasurmentR(client, measurment, index))\n                } else {\n                    dispatch(addMeasurmentR(client, measurment));\n                }\n            })\n        } else {\n            dispatch(addMeasurmentR(client, measurment))\n        }\n    }\n}\n\nexport const checkFirebaseMeasurment = (client: any, measurment: any, dispatch: any, customerStateMeasurment: any) => {\n    const arr = [];\n    if (customerStateMeasurment.length > 0) {\n        customerStateMeasurment.forEach((customer: any, index: number) => {\n            if (client !== undefined) {\n                if (customer[0] !== client) {\n                    arr.push(\"yes\");\n                }\n            }\n        })\n    }\n    if (arr.length === customerStateMeasurment.length) {\n        checkMeasurment(client, measurment, dispatch, customerStateMeasurment)\n    }\n}\n\nexport function addMeasurmentR(client: any, measurment: measurment) {\n    return {\n        type: \"Add_Measurment\",\n        client,\n        measurment\n    }\n}\n\nexport function updateMeasurmentR(client: any, measurment: measurment, index: number) {\n    return {\n        type: \"Update_Measurment\",\n        client,\n        index,\n        measurment\n    }\n}\n\ntype measurment = {\n    Length: number, Width: number, Neck: number, Waist: number, Middle: number, LegLenght: number,\n\n}\n\nexport function checkOrderFirebase(client: any, orders: string, customerStateOrders: any, dispatch: any) {\n    const arr = [];\n    if (customerStateOrders.length > 0) {\n        customerStateOrders.forEach((customer: any, index: number) => {\n            if (client !== undefined) {\n                if (customer[0] !== client) {\n                    arr.push(\"yes\");\n                }\n            }\n        })\n    }\n    if (arr.length === customerStateOrders.length) {\n        checkOrder(client, orders, customerStateOrders, dispatch,)\n    }\n}\n\nexport function checkOrder(client: any, orders: string, customerStateOrders: any, dispatch: any) {\n    if (customerStateOrders.length > 0) {\n        customerStateOrders.forEach((customer: any, index: number) => {\n            if (client !== undefined && orders !== null) {\n                if (customer[0] === client) {\n                    const order: number = parseInt(customer[1]) + parseInt(orders);\n                    dispatch(updateOrder(client, index, order));\n                }\n            }\n        })\n    }\n    else {\n        if (orders !== undefined) {\n            dispatch(addOrder(client, orders))\n        }\n    }\n}\nexport function addOrder(client: any, orders: string) {\n    firebase.database().ref().on(\"child_added\", snap => {\n        const tailor = snap.val();\n        firebase.firestore().collection('Tailor App').doc(tailor).collection(\"Orders\").doc(client).set({\n            orders: parseInt(orders)\n        }).then().catch();\n    });\n    const order = parseInt(orders)\n    return {\n        type: \"Add_Order\",\n        client,\n        orders: order\n    }\n}\nexport function updateOrder(client: any, index: any, orders: number) {\n    firebase.database().ref().on(\"child_added\", snap => {\n        const tailor = snap.val();\n        const promise = firebase.firestore().collection('Tailor App').doc(tailor).collection(\"Orders\").doc(client).set({\n            orders: orders\n        }).then().catch();\n    });\n    return {\n        type: \"Update_Order\",\n        client,\n        orders,\n        index\n    }\n}\n\nexport function checkStitch(client: any, amount: any, customerStateStitch: any, dispatch: any) {\n    if (customerStateStitch.length > 0) {\n        customerStateStitch.forEach((customer: any, index: number) => {\n            if (client !== undefined && amount !== null) {\n                if (customer[0] === client) {\n                    dispatch(updateStitch(client, index, amount));\n                }\n            }\n        })\n    }\n    else {\n        dispatch(addStitch(client, amount))\n    }\n}\n\nexport function addStitch(client: any, amount: any) {\n    firebase.database().ref().on(\"child_added\", snap => {\n        const tailor = snap.val();\n        firebase.firestore().collection('Tailor App').doc(tailor).collection(\"Sticthed\").doc(client).set({\n            sticthed: parseInt(amount)\n        }).then().catch();\n    });\n\n    return {\n        type: \"Add_Stitch\",\n        client,\n        amount\n    }\n}\n\nexport function updateStitch(client: any, index: any, amount: any) {\n    firebase.database().ref().on(\"child_added\", snap => {\n        const tailor = snap.val();\n        firebase.firestore().collection('Tailor App').doc(tailor).collection(\"Sticthed\").doc(client).set({\n            sticthed: parseInt(amount)\n        }).then().catch();\n    });\n\n    return {\n        type: \"Update_Stitch\",\n        index,\n        amount\n    }\n}\n\n","/home/faiza/Documents/Git Hub/tailor_app/src/components/SignUp.tsx",["96"],"import React from 'react';\nimport firebase from 'firebase';\nimport { configFirebase } from './firebase';\nimport { history } from './history';\nimport { useDispatch } from 'react-redux';\nimport { addTailor } from './store';\n\nconfigFirebase();\n\nexport function SignUp() {\n    const dispatch = useDispatch();\n    const signUpFun = (e: any) => {\n        e.preventDefault();\n        const [email, password, confirmPassword]: any[] = e.target;\n        const auth = firebase.auth();\n        if (password.value !== confirmPassword.value) {\n            alert(\"Password does not match\");\n        }\n        else {\n            const promise = auth.createUserWithEmailAndPassword(email.value, password.value)\n                .then((user) => {\n                    alert(\"Account is created successfully !!!\");\n                    dispatch(addTailor(user.user?.email))\n                    history.push('/SignIn');\n                    history.replace('./SignIn')\n                })\n                .catch((err) => {\n                    alert(err.message);\n                })\n        }\n    }\n    return (\n        <form onSubmit={signUpFun}>\n            <label className=\"text-dark\">Email :</label>\n            <input className=\"form-control\" type=\"email\" placeholder=\"Please write email here\" required />\n            <label className=\"text-dark\">Password :</label>\n            <input className=\"form-control\" type=\"password\" placeholder=\"Enter password here\" required />\n            <label className=\"text-dark\">Confirm Password :</label>\n            <input className=\"form-control\" type=\"password\" placeholder=\"Rewrite password here\" required />\n            <button className=\"btn btn-outline-warning\" type=\"submit\">SignUp</button>\n        </form>\n    )\n}\n","/home/faiza/Documents/Git Hub/tailor_app/src/components/Customers.tsx",["97","98"],"import React from \"react\";\nimport { useSelector } from 'react-redux';\nimport firebase from 'firebase';\nimport { history } from './index';\nimport { useDispatch } from 'react-redux';\nimport { addCustomerR, checkCustomer, checkCustomerFirebase } from \"./store\";\n\n\nexport const Customers = (props: any) => {\n    const customerState = useSelector((state: any) => state);\n    const dispatch = useDispatch();\n    const promise = () => {\n        firebase.firestore().collection('Tailor App').doc('Tailor').collection(props.name).get()\n            .then(snapshot => {\n                snapshot.docs.forEach(clients => {\n                    const client = clients.data().id;\n                    checkCustomerFirebase(client, customerState.clients, dispatch)\n                }\n                )\n            }).catch()\n    }\n    promise();\n    return (\n        <div>\n            <h2 className=\"h2 text-muted\">Customers</h2>\n            {\n                customerState.clients.length > 0 ?\n                    customerState.clients.map((customer: any, index: number) => {\n                        return (<div key={index}><h3 className=\"h3 text-muted d-inline mt-2\">{customer}</h3>\n                            <button id={customer + \"measurment\"} className=\"btn btn-outline-success d-inline\" onClick={() => {\n                                localStorage.setItem(\"customer\", customer);\n                                history.push(\"/AddDetail\");\n                                history.replace(\"/AddDetail\")\n                            }}>Edit Detail</button>\n                        </div>)\n                    }) :\n                    null\n            }\n        </div>\n    );\n};\n","/home/faiza/Documents/Git Hub/tailor_app/src/components/DashBoard.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/reducer.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/App.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/AddDetail.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/AddOrder.tsx",["99"],"import React from 'react';\nimport firebase from 'firebase';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { checkOrderFirebase } from './index';\nexport const AddOrder = (props: any) => {\n    const dispatch = useDispatch();\n    const customerState = useSelector((state: any) => state);\n    const tailor: any = localStorage.getItem(\"tailor\");\n    const promise = () => {\n        firebase.firestore().collection('Tailor App').doc(tailor).collection(\"Orders\").get()\n            .then(snapshot => {\n                snapshot.docs.forEach(client => {\n                    const clientName = client.id;\n                    const orders = client.data().orders;\n\n                    checkOrderFirebase(clientName, orders, customerState.orders, dispatch)\n                })\n            });\n    }\n    promise();\n\n    return (<div>\n        <h1 className=\"h1 text-muted\">Orders</h1>\n        <p className=\"text-muted\">If you want to stitch new dress: </p>\n        <input className=\"d-inline form-control\" type=\"text\" placeholder=\"Add number of orders here\" />\n        {customerState.orders.length > 0 ?\n            customerState.orders.map((order: any[], index: number) => {\n                if (order[0] === props.client) {\n                    return (\n                        <p key={index} className=\"text-muted\">Already Orders are {order[1]}</p>\n                    )\n                }\n            }) :\n            null\n        }\n    </div>)\n}","/home/faiza/Documents/Git Hub/tailor_app/src/components/AlreadyMeasurment.tsx",["100"],"import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { AddMeasurment } from './index';\nexport function AlreadyMeasurment(props: any) {\n    const customerState = useSelector((state: any) => state);\n    return (\n        <div >\n            <h1 className=\"h1 text-muted\">Measurment</h1>\n            <div id=\"Measurment\">\n                {customerState.measurment.length > 0 ?\n                    customerState.measurment.map((measurment: any[], index: number) => {\n                        if (measurment[0] === props.client) {\n                            return (<ul key={index} className=\"mr-5\">\n                                <li className=\"text-muted\"> Length : {measurment[1].Length}</li>\n                                <li className=\"text-muted\"> Width : {measurment[1].Width}</li>\n                                <li className=\"text-muted\"> Neck : {measurment[1].Neck}</li>\n                                <li className=\"text-muted\"> Waist : {measurment[1].Waist}</li>\n                                <li className=\"text-muted\"> Middle : {measurment[1].Middle}</li>\n                                <li className=\"text-muted\"> Leg Lenght : {measurment[1].LegLenght}</li>\n                            </ul>)\n                     }\n                     }) :\n                    null\n                }\n                <AddMeasurment/>\n            </div>\n        </div>\n    )\n}\n","/home/faiza/Documents/Git Hub/tailor_app/src/components/Condition.tsx",["101"],"import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport firebase from 'firebase';\nimport {  checkStitch } from './store';\n\nexport const Condition = (props: any) => {\n    const customerState = useSelector((state: any) => state);\n    const dispatch = useDispatch();\n    const promise = () => {\n        firebase.firestore().collection('Tailor App').doc(props.tailor).collection(\"Condition\").get()\n            .then(snapshot => {\n                snapshot.docs.forEach(client => {\n                    const clientName = client.id;\n                    const conditionAmount = client.data().condition.conditionAmount;\n                    checkStitch(clientName, conditionAmount , customerState.stitch, dispatch)\n                })\n            }).catch()\n    }\n    promise();\n\n    return (<div>\n        {\n            customerState.orders.length > 0 ?\n                <div className=\"condition\">\n                    <h1 className=\"h1 text-muted\">Condition</h1>\n                    <p className=\"text-muted\">If you want to add Condition : </p>\n                    <input className=\"w-75 d-inline form-control\" type=\"text\" placeholder=\"Add stitched dress number\" />\n                </div> :\n                null\n        }\n        {\n            customerState.orders.length > 0 ?\n                customerState.stitch.length > 0 ?\n                    customerState.stitch.map((stitch: any[], index: number) => {\n                        if (stitch[0] === props.client) {\n                            return (<ul key={index} className=\"mr-5\">\n                                <li className=\"text-muted\">  {stitch[1]} orders has stitched.</li>\n                            </ul>)\n                        }\n                    }) : console.log(customerState)\n                : null\n        }\n    </div>\n    )\n}\n",{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":26},{"ruleId":"106","severity":1,"message":"110","line":15,"column":11,"nodeType":"108","messageId":"109","endLine":15,"endColumn":18},{"ruleId":"111","severity":1,"message":"112","line":7,"column":17,"nodeType":"113","endLine":7,"endColumn":45},{"ruleId":"106","severity":1,"message":"114","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":25},{"ruleId":"106","severity":1,"message":"115","line":5,"column":10,"nodeType":"108","messageId":"109","endLine":5,"endColumn":20},{"ruleId":"106","severity":1,"message":"110","line":174,"column":15,"nodeType":"108","messageId":"109","endLine":174,"endColumn":22},{"ruleId":"106","severity":1,"message":"110","line":20,"column":19,"nodeType":"108","messageId":"109","endLine":20,"endColumn":26},{"ruleId":"106","severity":1,"message":"116","line":6,"column":10,"nodeType":"108","messageId":"109","endLine":6,"endColumn":22},{"ruleId":"106","severity":1,"message":"117","line":6,"column":24,"nodeType":"108","messageId":"109","endLine":6,"endColumn":37},{"ruleId":"118","severity":1,"message":"119","line":27,"column":68,"nodeType":"120","messageId":"121","endLine":27,"endColumn":70},{"ruleId":"118","severity":1,"message":"119","line":11,"column":85,"nodeType":"120","messageId":"121","endLine":11,"endColumn":87},{"ruleId":"118","severity":1,"message":"119","line":34,"column":77,"nodeType":"120","messageId":"121","endLine":34,"endColumn":79},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"@typescript-eslint/no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'promise' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'checkOrder' is defined but never used.","'addCustomerR' is defined but never used.","'checkCustomer' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]