[{"/home/faiza/Documents/Git Hub/tailor_app/src/index.tsx":"1","/home/faiza/Documents/Git Hub/tailor_app/src/components/Home.tsx":"2","/home/faiza/Documents/Git Hub/tailor_app/src/components/SignUp.tsx":"3","/home/faiza/Documents/Git Hub/tailor_app/src/components/Customers.tsx":"4","/home/faiza/Documents/Git Hub/tailor_app/src/components/AddDetail.tsx":"5","/home/faiza/Documents/Git Hub/tailor_app/src/components/Condition.tsx":"6","/home/faiza/Documents/Git Hub/tailor_app/src/components/alreadyCondition.tsx":"7","/home/faiza/Documents/Git Hub/tailor_app/src/components/reducer.tsx":"8","/home/faiza/Documents/Git Hub/tailor_app/src/components/AlreadyMeasurment.tsx":"9","/home/faiza/Documents/Git Hub/tailor_app/src/App.tsx":"10","/home/faiza/Documents/Git Hub/tailor_app/src/components/firebase.tsx":"11","/home/faiza/Documents/Git Hub/tailor_app/src/components/DashBoard.tsx":"12","/home/faiza/Documents/Git Hub/tailor_app/src/components/store.tsx":"13","/home/faiza/Documents/Git Hub/tailor_app/src/components/AddMeasurment.tsx":"14","/home/faiza/Documents/Git Hub/tailor_app/src/components/NotFound.tsx":"15","/home/faiza/Documents/Git Hub/tailor_app/src/components/EditMeasurment.tsx":"16"},{"size":330,"mtime":1606992343000,"results":"17","hashOfConfig":"18"},{"size":656,"mtime":1606992343000,"results":"19","hashOfConfig":"18"},{"size":2503,"mtime":1607930057588,"results":"20","hashOfConfig":"18"},{"size":1876,"mtime":1607934009757,"results":"21","hashOfConfig":"18"},{"size":4175,"mtime":1608184494610,"results":"22","hashOfConfig":"18"},{"size":1274,"mtime":1608025796016,"results":"23","hashOfConfig":"18"},{"size":6018,"mtime":1608025832766,"results":"24","hashOfConfig":"18"},{"size":3869,"mtime":1608018747846,"results":"25","hashOfConfig":"18"},{"size":5010,"mtime":1608184118626,"results":"26","hashOfConfig":"18"},{"size":975,"mtime":1607760005743,"results":"27","hashOfConfig":"18"},{"size":562,"mtime":1606992343000,"results":"28","hashOfConfig":"18"},{"size":2175,"mtime":1607925159349,"results":"29","hashOfConfig":"18"},{"size":16689,"mtime":1608184625725,"results":"30","hashOfConfig":"18"},{"size":7044,"mtime":1608184425192,"results":"31","hashOfConfig":"18"},{"size":595,"mtime":1607251724440,"results":"32","hashOfConfig":"18"},{"size":7239,"mtime":1608184248706,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ytme69",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":8,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/faiza/Documents/Git Hub/tailor_app/src/index.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/Home.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/SignUp.tsx",[],["70","71"],"/home/faiza/Documents/Git Hub/tailor_app/src/components/Customers.tsx",["72"],"import { useSelector } from 'react-redux';\nimport firebase from 'firebase';\nimport { history } from './index';\nimport { useDispatch } from 'react-redux';\nimport { addClient, deleteClient, deleteCustomer } from \"./store\";\n\n\nexport const Customers = (props: any) => {\n    const customerState = useSelector((state: any) => state);\n    const dispatch = useDispatch();\n\n    return (\n        <div>\n            {\n                customerState.clients.length > 0 ?\n                    customerState.clients.map((customer: any, index: number) => {\n                        return (<div key={index} className=\"mt-1  text-right mr-5\">\n                            <h3 className=\"h3 text-muted d-inline mt-2\">{customer}</h3>\n                            <button id={customer + \"measurment\"} className=\"btn btn-outline-success d-inline m-2 \" onClick={() => {\n                                dispatch(addClient(customer));\n                                history.push(\"/Measurment\");\n                                history.replace(\"/Measurment\");\n                            }}>Measurment</button>\n                            <button id={customer + \"orders\"} className=\"btn btn-outline-danger d-inline m-1\" onClick={() => {\n                                dispatch(addClient(customer));\n                                history.push(\"/Orders\");\n                                history.replace(\"/Orders\");\n                            }}>Orders</button>\n                            <button id={customer + \"delete\"} className=\"btn btn-outline-primary d-inline m-1 mr-5\" onClick={() => {\n                                dispatch(deleteCustomer(customer, customerState));\n                                dispatch(deleteClient());\n                            }}>Delete</button>\n                        </div>)\n                    }) :\n                    null\n            }\n        </div>\n    );\n};\n","/home/faiza/Documents/Git Hub/tailor_app/src/components/AddDetail.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/Condition.tsx",["73"],"import { useSelector } from 'react-redux';\n\nexport const Condition = () => {\n    const customerState = useSelector((state: any) => state);\n    const client: any = customerState.customer[0];\n    return (<div id=\" Condition\">\n        {customerState.orders.length > 0 ?\n            customerState.orders.map((order: any[], index: number) => {\n                if (order[0].toUpperCase() === client) {\n                    return (\n                        <div className=\"condition ml-5\" key={index}>\n                            <h1 className=\"h1 text-muted\">Condition</h1>\n                            <p className=\"text-muted\">If you want to  add   Condition : </p>\n                            <input type=\"number\" placeholder=\" Stitched  \" />\n                            <input className=\" mt-1 \" type=\"number\" placeholder=\" Delivered  \" />\n                            <input className=\" mt-1 \" type=\"number\" placeholder=\" Un Stitched  \" />\n                            <input className=\" mt-1 \" type=\"number\" placeholder=\" Lost  \" />\n                            <input className=\" mt-1 \" type=\"number\" placeholder=\" Out of Order Stitched  \" />\n                        </div>\n                    )\n                }\n            }) :\n            null\n        }\n\n    </div>\n    )\n}\n","/home/faiza/Documents/Git Hub/tailor_app/src/components/alreadyCondition.tsx",["74","75","76","77","78","79","80"],"import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport firebase from 'firebase';\nimport { checkStitch, checkDeliveredFirebase, checkUnStitchFirebase, checkLostFirebase, checkOutOfOrder, checkLost, checkOutOfOrderFirebase } from './store';\n\nexport const AlreadyCondition = () => {\n    const dispatch = useDispatch();\n    const customerState = useSelector((state: any) => state);\n    const tailor: any = customerState.tailors[0];\n    const client: any = customerState.customer[0];\n    const promise = () => {\n        firebase.firestore().collection('Condition').doc(tailor).collection(\"Sticthed\").get()\n            .then(snapshot => {\n                snapshot.docs.forEach(client => {\n                    const clientName = client.id;\n                    const conditionAmount = client.data().sticthed;\n                    checkStitch(clientName, conditionAmount, customerState, dispatch)\n                })\n            }).catch();\n        firebase.firestore().collection('Condition').doc(tailor).collection(\"Delivered\").get()\n            .then(snapshot => {\n                snapshot.docs.forEach(client => {\n                    const clientName = client.id;\n                    const conditionAmount = client.data().delivered;\n                    checkDeliveredFirebase(clientName, conditionAmount, customerState, dispatch)\n                })\n            }).catch()\n        firebase.firestore().collection('Condition').doc(tailor).collection(\"UnStitched\").get()\n            .then(snapshot => {\n                snapshot.docs.forEach(client => {\n                    const clientName = client.id;\n                    const conditionAmount = client.data().unstitched;\n                    checkUnStitchFirebase(clientName, conditionAmount, customerState, dispatch);\n                })\n            }).catch()\n        firebase.firestore().collection('Condition').doc(tailor).collection(\"Losted\").get()\n            .then(snapshot => {\n                snapshot.docs.forEach(client => {\n                    const clientName = client.id;\n                    const conditionAmount = client.data().losted;\n                    checkLostFirebase(clientName, conditionAmount, customerState, dispatch);\n                })\n            }).catch()\n        firebase.firestore().collection('Condition').doc(tailor).collection(\"OutOfOrder\").get()\n            .then(snapshot => {\n                snapshot.docs.forEach(client => {\n                    const clientName = client.id;\n                    const conditionAmount = client.data().OutOfOrder;\n                    checkOutOfOrder(clientName, conditionAmount, customerState, dispatch);\n                })\n            }).catch()\n    }\n    promise();\n\n    return (\n        <div id=\"condition\" className=\"mt-5 text-left ml-5\">\n            <div className=\"mt-5\">\n                {\n                    customerState.orders.length > 0 ?\n                        customerState.stitch.length > 0 ?\n                            customerState.stitch.map((stitch: any[], index: number) => {\n                                if (stitch[0] === client) {\n                                    return (\n                                        <p className=\"text-muted\" key={index}>  {stitch[1]} orders has stitched.</p>\n                                    )\n                                }\n                            }) : null\n                        : null\n                }\n                {\n                    customerState.orders.length > 0 ?\n                        customerState.delivered.length > 0 ?\n                            customerState.delivered.map((deliver: any[], index: number) => {\n                                if (deliver[0] === client) {\n                                    return (\n                                        <p className=\"text-muted\" key={index}>  {deliver[1]} orders has delivered.</p>\n                                    )\n                                }\n                            }) : null\n                        : null\n                }\n                {\n                    customerState.orders.length > 0 ?\n                        customerState.unStitch.length > 0 ?\n                            customerState.unStitch.map((unStitch: any[], index: number) => {\n                                if (unStitch[0] === client) {\n                                    return (\n                                        <p className=\"text-muted\" key={index}>  {unStitch[1]} orders are un stitched.</p>\n                                    )\n                                } else {\n                                    console.log(unStitch[0], client);\n\n                                }\n                            }) : null\n                        : null\n                }\n                {\n                    customerState.orders.length > 0 ?\n                        customerState.lost.length > 0 ?\n                            customerState.lost.map((losted: any, index: number) => {\n                                if (losted[0] === client) {\n                                    return (\n                                        <p className=\"text-muted\" key={index}> {losted[1]} orders has losted.</p>\n                                    )\n                                }\n                            }) : null\n                        : null\n                }\n                {\n                    customerState.outOfOrder.length > 0 ?\n                        customerState.outOfOrder.length > 0 ?\n                            customerState.outOfOrder.map((outOfOrder: any, index: number) => {\n                                if (outOfOrder[0] === client) {\n                                    return (\n                                        <p className=\"text-muted\" key={index}> {outOfOrder[1]} orders has wrong stitched.</p>\n                                    )\n                                }\n                            }) : null\n                        : null\n                }\n            </div>\n        </div>\n    )\n}","/home/faiza/Documents/Git Hub/tailor_app/src/components/reducer.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/AlreadyMeasurment.tsx",["81","82"],"/home/faiza/Documents/Git Hub/tailor_app/src/App.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/firebase.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/DashBoard.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/store.tsx",["83","84","85","86","87","88","89","90","91","92","93","94","95","96"],"/home/faiza/Documents/Git Hub/tailor_app/src/components/AddMeasurment.tsx",["97","98","99"],"/home/faiza/Documents/Git Hub/tailor_app/src/components/NotFound.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/EditMeasurment.tsx",["100","101"],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":2,"column":8,"nodeType":"108","messageId":"109","endLine":2,"endColumn":16},{"ruleId":"110","severity":1,"message":"111","line":8,"column":68,"nodeType":"112","messageId":"113","endLine":8,"endColumn":70},{"ruleId":"106","severity":1,"message":"114","line":4,"column":106,"nodeType":"108","messageId":"109","endLine":4,"endColumn":115},{"ruleId":"106","severity":1,"message":"115","line":4,"column":117,"nodeType":"108","messageId":"109","endLine":4,"endColumn":140},{"ruleId":"110","severity":1,"message":"111","line":61,"column":85,"nodeType":"112","messageId":"113","endLine":61,"endColumn":87},{"ruleId":"110","severity":1,"message":"111","line":73,"column":89,"nodeType":"112","messageId":"113","endLine":73,"endColumn":91},{"ruleId":"110","severity":1,"message":"111","line":85,"column":89,"nodeType":"112","messageId":"113","endLine":85,"endColumn":91},{"ruleId":"110","severity":1,"message":"111","line":100,"column":81,"nodeType":"112","messageId":"113","endLine":100,"endColumn":83},{"ruleId":"110","severity":1,"message":"111","line":112,"column":91,"nodeType":"112","messageId":"113","endLine":112,"endColumn":93},{"ruleId":"106","severity":1,"message":"116","line":22,"column":11,"nodeType":"108","messageId":"109","endLine":22,"endColumn":30},{"ruleId":"110","severity":1,"message":"111","line":48,"column":79,"nodeType":"112","messageId":"113","endLine":48,"endColumn":81},{"ruleId":"106","severity":1,"message":"117","line":331,"column":11,"nodeType":"108","messageId":"109","endLine":331,"endColumn":17},{"ruleId":"106","severity":1,"message":"118","line":432,"column":13,"nodeType":"108","messageId":"109","endLine":432,"endColumn":24},{"ruleId":"106","severity":1,"message":"119","line":437,"column":13,"nodeType":"108","messageId":"109","endLine":437,"endColumn":27},{"ruleId":"106","severity":1,"message":"120","line":442,"column":13,"nodeType":"108","messageId":"109","endLine":442,"endColumn":26},{"ruleId":"106","severity":1,"message":"121","line":447,"column":13,"nodeType":"108","messageId":"109","endLine":447,"endColumn":22},{"ruleId":"106","severity":1,"message":"122","line":452,"column":13,"nodeType":"108","messageId":"109","endLine":452,"endColumn":28},{"ruleId":"123","severity":1,"message":"124","line":466,"column":97,"nodeType":"125","messageId":"126","endLine":466,"endColumn":98,"fix":"127"},{"ruleId":"123","severity":1,"message":"124","line":468,"column":100,"nodeType":"125","messageId":"126","endLine":468,"endColumn":101,"fix":"128"},{"ruleId":"123","severity":1,"message":"124","line":470,"column":95,"nodeType":"125","messageId":"126","endLine":470,"endColumn":96,"fix":"129"},{"ruleId":"123","severity":1,"message":"124","line":472,"column":99,"nodeType":"125","messageId":"126","endLine":472,"endColumn":100,"fix":"130"},{"ruleId":"123","severity":1,"message":"124","line":474,"column":96,"nodeType":"125","messageId":"126","endLine":474,"endColumn":97,"fix":"131"},{"ruleId":"123","severity":1,"message":"124","line":476,"column":100,"nodeType":"125","messageId":"126","endLine":476,"endColumn":101,"fix":"132"},{"ruleId":"123","severity":1,"message":"124","line":478,"column":98,"nodeType":"125","messageId":"126","endLine":478,"endColumn":99,"fix":"133"},{"ruleId":"123","severity":1,"message":"124","line":480,"column":100,"nodeType":"125","messageId":"126","endLine":480,"endColumn":101,"fix":"134"},{"ruleId":"106","severity":1,"message":"116","line":25,"column":11,"nodeType":"108","messageId":"109","endLine":25,"endColumn":30},{"ruleId":"106","severity":1,"message":"135","line":28,"column":51,"nodeType":"108","messageId":"109","endLine":28,"endColumn":55},{"ruleId":"110","severity":1,"message":"111","line":53,"column":81,"nodeType":"112","messageId":"113","endLine":53,"endColumn":83},{"ruleId":"110","severity":1,"message":"136","line":15,"column":71,"nodeType":"112","messageId":"137","endLine":15,"endColumn":73},{"ruleId":"110","severity":1,"message":"111","line":47,"column":83,"nodeType":"112","messageId":"113","endLine":47,"endColumn":85},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"@typescript-eslint/no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'checkLost' is defined but never used.","'checkOutOfOrderFirebase' is defined but never used.","'saveMeasurment' is assigned a value but never used.","'tailor' is assigned a value but never used.","'stitchIndex' is assigned a value but never used.","'deliveredIndex' is assigned a value but never used.","'unStitchIndex' is assigned a value but never used.","'lostIndex' is assigned a value but never used.","'outOfOrderIndex' is assigned a value but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"140","text":"141"},{"range":"142","text":"141"},{"range":"143","text":"141"},{"range":"144","text":"141"},{"range":"145","text":"141"},{"range":"146","text":"141"},{"range":"147","text":"141"},{"range":"148","text":"141"},"'Bust' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","no-global-assign","no-unsafe-negation",[14324,14334],"\n        .",[14443,14453],[14557,14567],[14675,14685],[14790,14800],[14909,14919],[15026,15036],[15145,15155]]