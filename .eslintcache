[{"/home/faiza/Documents/Git Hub/tailor_app/src/index.tsx":"1","/home/faiza/Documents/Git Hub/tailor_app/src/components/index.tsx":"2","/home/faiza/Documents/Git Hub/tailor_app/src/components/Home.tsx":"3","/home/faiza/Documents/Git Hub/tailor_app/src/components/SignIn.tsx":"4","/home/faiza/Documents/Git Hub/tailor_app/src/components/Nav.tsx":"5","/home/faiza/Documents/Git Hub/tailor_app/src/components/firebase.tsx":"6","/home/faiza/Documents/Git Hub/tailor_app/src/components/NotFound.tsx":"7","/home/faiza/Documents/Git Hub/tailor_app/src/components/AddMeasurment.tsx":"8","/home/faiza/Documents/Git Hub/tailor_app/src/components/history.tsx":"9","/home/faiza/Documents/Git Hub/tailor_app/src/components/store.tsx":"10","/home/faiza/Documents/Git Hub/tailor_app/src/components/SignUp.tsx":"11","/home/faiza/Documents/Git Hub/tailor_app/src/components/Customers.tsx":"12","/home/faiza/Documents/Git Hub/tailor_app/src/components/DashBoard.tsx":"13","/home/faiza/Documents/Git Hub/tailor_app/src/components/reducer.tsx":"14","/home/faiza/Documents/Git Hub/tailor_app/src/App.tsx":"15","/home/faiza/Documents/Git Hub/tailor_app/src/components/AddDetail.tsx":"16","/home/faiza/Documents/Git Hub/tailor_app/src/components/AddOrder.tsx":"17","/home/faiza/Documents/Git Hub/tailor_app/src/components/AlreadyMeasurment.tsx":"18","/home/faiza/Documents/Git Hub/tailor_app/src/components/Condition.tsx":"19","/home/faiza/Documents/Git Hub/tailor_app/src/components/alreadyCondition.tsx":"20"},{"size":330,"mtime":1606992343000,"results":"21","hashOfConfig":"22"},{"size":877,"mtime":1607517085202,"results":"23","hashOfConfig":"22"},{"size":656,"mtime":1606992343000,"results":"24","hashOfConfig":"22"},{"size":1463,"mtime":1607435945390,"results":"25","hashOfConfig":"22"},{"size":987,"mtime":1607436014526,"results":"26","hashOfConfig":"22"},{"size":562,"mtime":1606992343000,"results":"27","hashOfConfig":"22"},{"size":595,"mtime":1607251724440,"results":"28","hashOfConfig":"22"},{"size":3594,"mtime":1607488867362,"results":"29","hashOfConfig":"22"},{"size":95,"mtime":1607326904207,"results":"30","hashOfConfig":"22"},{"size":14659,"mtime":1607519220029,"results":"31","hashOfConfig":"22"},{"size":1879,"mtime":1607520282055,"results":"32","hashOfConfig":"22"},{"size":2000,"mtime":1607434249041,"results":"33","hashOfConfig":"22"},{"size":1704,"mtime":1607264523633,"results":"34","hashOfConfig":"22"},{"size":3385,"mtime":1607519108145,"results":"35","hashOfConfig":"22"},{"size":907,"mtime":1607434161875,"results":"36","hashOfConfig":"22"},{"size":2465,"mtime":1607519498755,"results":"37","hashOfConfig":"22"},{"size":1452,"mtime":1607434369573,"results":"38","hashOfConfig":"22"},{"size":1972,"mtime":1607435221982,"results":"39","hashOfConfig":"22"},{"size":1314,"mtime":1607525686453,"results":"40","hashOfConfig":"22"},{"size":5734,"mtime":1607525897221,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"34fyjp",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/faiza/Documents/Git Hub/tailor_app/src/index.tsx",[],["88","89"],"/home/faiza/Documents/Git Hub/tailor_app/src/components/index.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/Home.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/SignIn.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/Nav.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/firebase.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/NotFound.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/AddMeasurment.tsx",["90"],"import React from 'react';\nimport firebase from 'firebase';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { checkFirebaseMeasurment, checkMeasurment } from './index';\nimport { history } from './history';\nimport { AlreadyMeasurment } from './AlreadyMeasurment';\n\nexport function AddMeasurment() {\n    const client: any = localStorage.getItem(\"customer\");\n    const tailor: any = localStorage.getItem(\"tailor\");\n    const dispatch = useDispatch();\n    const customerState = useSelector((state: any) => state);\n    const promise = () => {\n        firebase.firestore().collection('Tailor App').doc(tailor).collection(\"Measurment\").get()\n            .then(snapshot => {\n                snapshot.docs.forEach(client => {\n                    const clientName = client.id;\n                    const measurment = client.data().measurmentEle;\n                    checkFirebaseMeasurment(clientName, measurment, dispatch, customerState.measurment);\n                })\n            }).catch()\n    }\n    promise();\n\n    const saveMeasurment: any = (e: any) => {\n        e.preventDefault();\n\n        const [Length, Width, Neck, Chest, Waist, Bust, ArmLenght, ShoulderLenght, LegLenght] = e.target;\n        const measurmentEle = {\n            Length: Length.value, Width: Width.value, Chest: Chest.value, Waist: Waist.value, Neck: Neck.value, ArmLenght: ArmLenght.value, Shoulder: ShoulderLenght.value, LegLenght: LegLenght.value,\n        }\n\n        firebase.database().ref().on(\"child_added\", snap => {\n            const promise = firebase.firestore().collection('Tailor App').doc(tailor).collection(\"Measurment\").doc(client).set({\n                measurmentEle\n            });\n            promise.then(() => {\n                alert(\"Data is updated\");\n                checkMeasurment(client, measurmentEle, dispatch, customerState.measurment);\n                history.push(\"/DashBoard\");\n                history.replace(\"/DashBoard\");\n            })\n            promise.catch((err) => {\n                alert(err.message)\n            })\n        });\n    }\n\n    return (\n        <div>\n            <h1 className=\"h1 text-muted\">Measurment</h1>\n            <div className=\"measurment\">\n                <AlreadyMeasurment client={client} />\n                <form className=\"mr-5 \" onSubmit={saveMeasurment}>\n                    <input className=\"form-control\" type=\"number\" placeholder=\"Length\" required />\n                    <input className=\"form-control mt-1\" type=\"number\" placeholder=\"Width\" required />\n                    <input className=\"form-control mt-1\" type=\"number\" placeholder=\"Neck\" required />\n                    <input className=\"form-control mt-1\" type=\"number\" placeholder=\"Chest\" required />\n                    <input className=\"form-control mt-1\" type=\"number\" placeholder=\"Waist\" required />\n                    <input className=\"form-control mt-1\" type=\"number\" placeholder=\"Bust\" required />\n                    <input className=\"form-control mt-1\" type=\"number\" placeholder=\"Arm Width\" required />\n                    <input className=\"form-control mt-1\" type=\"number\" placeholder=\"Shoulder Width\" required />\n                    <input className=\"form-control mt-1\" type=\"number\" placeholder=\"Leg Lenght\" required />\n                    <button className=\"btn btn-outline-success d-inline\" type=\"submit\">Save Measurment</button>\n                    <button className=\"btn btn-outline-danger\" type=\"button\" onClick={() => { history.push(\"/DashBoard\"); history.replace('/DashBoard') }}>Cancle</button>\n                </form>\n            </div>\n        </div>\n    )\n}\n","/home/faiza/Documents/Git Hub/tailor_app/src/components/history.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/store.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/SignUp.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/Customers.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/DashBoard.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/reducer.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/App.tsx",["91"],"import React from 'react';\nimport { Router, Route, Switch } from 'react-router';\nimport { Nav, Home, SignUp, SignIn, DashBoard, NotFound, history, AddDetail , AlreadyMeasurment, AddMeasurment} from './components/index';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n\n  return (\n    <div className=\"App text-center\">\n      <Router history={history}>\n        <Nav />\n        <Switch>\n          <Route path=\"/\" component={Home} exact></Route>\n          <Route path=\"/SignUp\" component={SignUp}></Route>\n          <Route path=\"/SignIn\" component={SignIn}></Route>\n          <Route path=\"/DashBoard\" component={DashBoard}></Route>\n          <Route path=\"/Measurment\" component={AddMeasurment}></Route>\n          <Route path=\"/Orders\" component={AddDetail}></Route>\n          <Route path=\"\" component={NotFound}></Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/home/faiza/Documents/Git Hub/tailor_app/src/components/AddDetail.tsx",["92"],"import React from 'react';\nimport { AddOrder, checkOrder, history, AlreadyCondition } from './index';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Condition } from './Condition';\nimport { checkStitch, checkDelivered, checkUnStitch, checkLost, checkOutOfOrder } from './store';\nimport firebase from 'firebase';\n\nexport const AddDetail = () => {\n    const dispatch = useDispatch();\n    const customerState = useSelector((state: any) => state);\n    const client: any = localStorage.getItem(\"customer\");\n    const tailor: any = localStorage.getItem(\"tailor\");\n\n    const saveDetail: any = (e: any) => {\n        e.preventDefault();\n\n        const [NewOrders, sticthed, delivered, unStitched, lost, outOfOrder] = e.target;\n        if (NewOrders) {\n            if (NewOrders.value > 0) {\n                checkOrder(client, NewOrders.value, customerState.orders, dispatch)\n            }\n        }\n\n        if (sticthed) {\n\n            if (sticthed.value > 0) {\n                checkStitch(client, sticthed.value, customerState.stitch, dispatch)\n            }\n        }\n\n        if (delivered) {\n            if (delivered.value > 0) {\n                checkDelivered(client, delivered.value, customerState.delivered, dispatch)\n            }\n        }\n        if (unStitched) {\n\n            if (unStitched.value > 0) {\n                checkUnStitch(client, unStitched.value, customerState.unStitch, dispatch);\n            }\n        }\n        if (lost) {\n            if (lost.value > 0) {\n                checkLost(tailor, client, lost.value, customerState.lost, dispatch)\n            }\n        }\n        if (outOfOrder) {\n            if (outOfOrder.value > 0) {\n                checkOutOfOrder(tailor, client, outOfOrder.value, customerState.outOfOrder, dispatch)\n            }\n        }\n        history.push(\"/DashBoard\");\n        history.replace(\"/DashBoard\");\n    }\n    return (\n        <form onSubmit={saveDetail}>\n            <div id=\"addDetail\">\n                <AddOrder client={client} />\n                <Condition client={client} tailor={tailor} />\n                <AlreadyCondition client={client} tailor={tailor} />\n            </div>\n            <button id=\"saveDetail\" className=\"btn btn-outline-primary\" type=\"submit\">Save Detail</button>\n            <button className=\"btn btn-outline-success\" type=\"button\" onClick={() => { history.push(\"/DashBoard\"); history.replace('/DashBoard') }}>Save Without Changing</button>\n        </form>\n    )\n}","/home/faiza/Documents/Git Hub/tailor_app/src/components/AddOrder.tsx",["93"],"import React from 'react';\nimport firebase from 'firebase';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { checkOrderFirebase } from './index';\nexport const AddOrder = (props: any) => {\n    const dispatch = useDispatch();\n    const customerState = useSelector((state: any) => state);\n    const tailor: any = localStorage.getItem(\"tailor\");\n    const promise = () => {\n        firebase.firestore().collection('Tailor App').doc(tailor).collection(\"Orders\").get()\n            .then(snapshot => {\n                snapshot.docs.forEach(client => {\n                    const clientName = client.id;\n                    const orders = client.data().orders;\n\n                    checkOrderFirebase(clientName, orders, customerState.orders, dispatch)\n                })\n            });\n    }\n    promise();\n\n    return (<div>\n        <h1 className=\"h1 text-muted\">Orders</h1>\n        <p className=\"text-muted\">If you want to stitch new dress: </p>\n        <input className=\"d-inline form-control\" type=\"text\" placeholder=\"Add number of orders here\" />\n        {customerState.orders.length > 0 ?\n            customerState.orders.map((order: any[], index: number) => {\n                if (order[0] === props.client) {\n                    return (\n                        <p key={index} className=\"text-muted mt-1\">Already Orders are {order[1]}</p>\n                    )\n                }\n            }) :\n            null\n        }\n    </div>)\n}","/home/faiza/Documents/Git Hub/tailor_app/src/components/AlreadyMeasurment.tsx",["94","95"],"import React from 'react';\nimport { useSelector , useDispatch} from 'react-redux';\nimport { AddMeasurment , checkFirebaseMeasurment } from './index';\nimport firebase from 'firebase';\n\nexport function AlreadyMeasurment(props: any) {\n    const tailor: any = localStorage.getItem(\"tailor\");\n    const dispatch = useDispatch();\n    const customerState = useSelector((state: any) => state);\n    const promise = () => {\n        firebase.firestore().collection('Tailor App').doc(tailor).collection(\"Measurment\").get()\n            .then(snapshot => {\n                snapshot.docs.forEach(client => {\n                    const clientName = client.id;\n                    const measurment = client.data().measurmentEle;\n                    checkFirebaseMeasurment(clientName, measurment, dispatch, customerState.measurment);\n                })\n            }).catch()\n    }\n    promise();\n    \n    return (\n        <div >\n            <div id=\"Measurment\">\n                {customerState.measurment.length > 0 ?\n                    customerState.measurment.map((measurment: any[], index: number) => {\n                        if (measurment[0] === props.client) {\n                            return (<ul key={index} className=\"mr-5\">\n                                <li className=\"text-muted\"> Length : {measurment[1].Length}</li>\n                                <li className=\"text-muted\"> Width : {measurment[1].Width}</li>\n                                <li className=\"text-muted\"> Neck : {measurment[1].Neck}</li>\n                                <li className=\"text-muted\"> Waist : {measurment[1].Waist}</li>\n                                <li className=\"text-muted\"> Middle : {measurment[1].Middle}</li>\n                                <li className=\"text-muted\"> Leg Lenght : {measurment[1].LegLenght}</li>\n                            </ul>)\n                     }\n                     }) :\n                    null\n                }\n            </div>\n        </div>\n    )\n}\n","/home/faiza/Documents/Git Hub/tailor_app/src/components/Condition.tsx",["96","97","98","99","100"],"/home/faiza/Documents/Git Hub/tailor_app/src/components/alreadyCondition.tsx",["101","102","103","104","105","106","107"],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":28,"column":51,"nodeType":"114","messageId":"115","endLine":28,"endColumn":55},{"ruleId":"112","severity":1,"message":"116","line":3,"column":79,"nodeType":"114","messageId":"115","endLine":3,"endColumn":96},{"ruleId":"112","severity":1,"message":"117","line":6,"column":8,"nodeType":"114","messageId":"115","endLine":6,"endColumn":16},{"ruleId":"118","severity":1,"message":"119","line":27,"column":68,"nodeType":"120","messageId":"121","endLine":27,"endColumn":70},{"ruleId":"112","severity":1,"message":"122","line":3,"column":10,"nodeType":"114","messageId":"115","endLine":3,"endColumn":23},{"ruleId":"118","severity":1,"message":"119","line":26,"column":85,"nodeType":"120","messageId":"121","endLine":26,"endColumn":87},{"ruleId":"112","severity":1,"message":"123","line":2,"column":23,"nodeType":"114","messageId":"115","endLine":2,"endColumn":34},{"ruleId":"112","severity":1,"message":"117","line":3,"column":8,"nodeType":"114","messageId":"115","endLine":3,"endColumn":16},{"ruleId":"112","severity":1,"message":"124","line":4,"column":10,"nodeType":"114","messageId":"115","endLine":4,"endColumn":21},{"ruleId":"112","severity":1,"message":"125","line":4,"column":23,"nodeType":"114","messageId":"115","endLine":4,"endColumn":45},{"ruleId":"112","severity":1,"message":"126","line":4,"column":47,"nodeType":"114","messageId":"115","endLine":4,"endColumn":68},{"ruleId":"112","severity":1,"message":"127","line":4,"column":106,"nodeType":"114","messageId":"115","endLine":4,"endColumn":115},{"ruleId":"112","severity":1,"message":"128","line":4,"column":117,"nodeType":"114","messageId":"115","endLine":4,"endColumn":140},{"ruleId":"118","severity":1,"message":"119","line":58,"column":81,"nodeType":"120","messageId":"121","endLine":58,"endColumn":83},{"ruleId":"118","severity":1,"message":"119","line":70,"column":85,"nodeType":"120","messageId":"121","endLine":70,"endColumn":87},{"ruleId":"118","severity":1,"message":"119","line":82,"column":85,"nodeType":"120","messageId":"121","endLine":82,"endColumn":87},{"ruleId":"118","severity":1,"message":"119","line":97,"column":77,"nodeType":"120","messageId":"121","endLine":97,"endColumn":79},{"ruleId":"118","severity":1,"message":"119","line":109,"column":87,"nodeType":"120","messageId":"121","endLine":109,"endColumn":89},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"@typescript-eslint/no-unused-vars","'Bust' is assigned a value but never used.","Identifier","unusedVar","'AlreadyMeasurment' is defined but never used.","'firebase' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'AddMeasurment' is defined but never used.","'useDispatch' is defined but never used.","'checkStitch' is defined but never used.","'checkDeliveredFirebase' is defined but never used.","'checkUnStitchFirebase' is defined but never used.","'checkLost' is defined but never used.","'checkOutOfOrderFirebase' is defined but never used.","no-global-assign","no-unsafe-negation"]