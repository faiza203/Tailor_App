[{"/home/faiza/Documents/Git Hub/tailor_app/src/index.tsx":"1","/home/faiza/Documents/Git Hub/tailor_app/src/components/index.tsx":"2","/home/faiza/Documents/Git Hub/tailor_app/src/components/Home.tsx":"3","/home/faiza/Documents/Git Hub/tailor_app/src/components/SignIn.tsx":"4","/home/faiza/Documents/Git Hub/tailor_app/src/components/firebase.tsx":"5","/home/faiza/Documents/Git Hub/tailor_app/src/components/NotFound.tsx":"6","/home/faiza/Documents/Git Hub/tailor_app/src/components/AddMeasurment.tsx":"7","/home/faiza/Documents/Git Hub/tailor_app/src/components/history.tsx":"8","/home/faiza/Documents/Git Hub/tailor_app/src/components/store.tsx":"9","/home/faiza/Documents/Git Hub/tailor_app/src/components/SignUp.tsx":"10","/home/faiza/Documents/Git Hub/tailor_app/src/components/Customers.tsx":"11","/home/faiza/Documents/Git Hub/tailor_app/src/components/DashBoard.tsx":"12","/home/faiza/Documents/Git Hub/tailor_app/src/components/reducer.tsx":"13","/home/faiza/Documents/Git Hub/tailor_app/src/App.tsx":"14","/home/faiza/Documents/Git Hub/tailor_app/src/components/AddDetail.tsx":"15","/home/faiza/Documents/Git Hub/tailor_app/src/components/AddOrder.tsx":"16","/home/faiza/Documents/Git Hub/tailor_app/src/components/AlreadyMeasurment.tsx":"17","/home/faiza/Documents/Git Hub/tailor_app/src/components/Condition.tsx":"18","/home/faiza/Documents/Git Hub/tailor_app/src/components/alreadyCondition.tsx":"19","/home/faiza/Documents/Git Hub/tailor_app/src/components/EditMeasurment.tsx":"20"},{"size":330,"mtime":1606992343000,"results":"21","hashOfConfig":"22"},{"size":937,"mtime":1607863654481,"results":"23","hashOfConfig":"22"},{"size":656,"mtime":1606992343000,"results":"24","hashOfConfig":"22"},{"size":1598,"mtime":1607930500532,"results":"25","hashOfConfig":"22"},{"size":562,"mtime":1606992343000,"results":"26","hashOfConfig":"22"},{"size":595,"mtime":1607251724440,"results":"27","hashOfConfig":"22"},{"size":7064,"mtime":1608015812186,"results":"28","hashOfConfig":"22"},{"size":95,"mtime":1607326904207,"results":"29","hashOfConfig":"22"},{"size":15222,"mtime":1608026246467,"results":"30","hashOfConfig":"22"},{"size":2503,"mtime":1607930057588,"results":"31","hashOfConfig":"22"},{"size":1876,"mtime":1607934009757,"results":"32","hashOfConfig":"22"},{"size":2175,"mtime":1607925159349,"results":"33","hashOfConfig":"22"},{"size":3869,"mtime":1608018747846,"results":"34","hashOfConfig":"22"},{"size":975,"mtime":1607760005743,"results":"35","hashOfConfig":"22"},{"size":3519,"mtime":1608026119910,"results":"36","hashOfConfig":"22"},{"size":1462,"mtime":1608017453472,"results":"37","hashOfConfig":"22"},{"size":4904,"mtime":1607933323193,"results":"38","hashOfConfig":"22"},{"size":1274,"mtime":1608025796016,"results":"39","hashOfConfig":"22"},{"size":6018,"mtime":1608025832766,"results":"40","hashOfConfig":"22"},{"size":7219,"mtime":1607932939300,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"34fyjp",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"51"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},"/home/faiza/Documents/Git Hub/tailor_app/src/index.tsx",[],["92","93"],"/home/faiza/Documents/Git Hub/tailor_app/src/components/index.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/Home.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/SignIn.tsx",[],["94","95"],"/home/faiza/Documents/Git Hub/tailor_app/src/components/firebase.tsx",[],["96","97"],"/home/faiza/Documents/Git Hub/tailor_app/src/components/NotFound.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/AddMeasurment.tsx",["98","99","100"],"/home/faiza/Documents/Git Hub/tailor_app/src/components/history.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/store.tsx",["101","102","103","104"],"/home/faiza/Documents/Git Hub/tailor_app/src/components/SignUp.tsx",[],["105","106"],"/home/faiza/Documents/Git Hub/tailor_app/src/components/Customers.tsx",["107"],"import { useSelector } from 'react-redux';\nimport firebase from 'firebase';\nimport { history } from './index';\nimport { useDispatch } from 'react-redux';\nimport { addClient, deleteClient, deleteCustomer } from \"./store\";\n\n\nexport const Customers = (props: any) => {\n    const customerState = useSelector((state: any) => state);\n    const dispatch = useDispatch();\n\n    return (\n        <div>\n            {\n                customerState.clients.length > 0 ?\n                    customerState.clients.map((customer: any, index: number) => {\n                        return (<div key={index} className=\"mt-1  text-right mr-5\">\n                            <h3 className=\"h3 text-muted d-inline mt-2\">{customer}</h3>\n                            <button id={customer + \"measurment\"} className=\"btn btn-outline-success d-inline m-2 \" onClick={() => {\n                                dispatch(addClient(customer));\n                                history.push(\"/Measurment\");\n                                history.replace(\"/Measurment\");\n                            }}>Measurment</button>\n                            <button id={customer + \"orders\"} className=\"btn btn-outline-danger d-inline m-1\" onClick={() => {\n                                dispatch(addClient(customer));\n                                history.push(\"/Orders\");\n                                history.replace(\"/Orders\");\n                            }}>Orders</button>\n                            <button id={customer + \"delete\"} className=\"btn btn-outline-primary d-inline m-1 mr-5\" onClick={() => {\n                                dispatch(deleteCustomer(customer, customerState));\n                                dispatch(deleteClient());\n                            }}>Delete</button>\n                        </div>)\n                    }) :\n                    null\n            }\n        </div>\n    );\n};\n","/home/faiza/Documents/Git Hub/tailor_app/src/components/DashBoard.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/reducer.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/App.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/AddDetail.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/AddOrder.tsx",["108"],"import React from 'react';\nimport firebase from 'firebase';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { checkOrderFirebase } from './index';\nexport const AddOrder = () => {\n    const dispatch = useDispatch();\n    const customerState = useSelector((state: any) => state);\n    const client: any = customerState.customer[0];\n    const tailor: any = customerState.tailors[0];\n    const promise = () => {\n        firebase.firestore().collection('Orders').doc(tailor).collection(\"Customer\").get()\n            .then(snapshot => {\n                snapshot.docs.forEach(clients => {\n                    const clientName = clients.id;\n                    const orders = clients.data().orders;\n                    checkOrderFirebase(clientName, orders, customerState, dispatch)\n                })\n            });\n    }\n    promise();\n\n    return (<div>\n        <h1 className=\"h1 text-muted\">Orders</h1>\n        <p className=\"text-muted\">If you want to stitch new dress: </p>\n        <input className=\"d-inline\" type=\"number\" placeholder=\"Add Orders\" />\n        {customerState.orders.length > 0 ?\n            customerState.orders.map((order: any[], index: number) => {\n                if (order[0].toUpperCase() === client) {\n                    return (\n                        <p key={index} className=\"text-muted mt-1\">Already Orders are {order[1]}</p>\n                    )\n                }\n            }) :\n            null\n        }\n    </div>)\n}","/home/faiza/Documents/Git Hub/tailor_app/src/components/AlreadyMeasurment.tsx",["109","110"],"import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { checkMeasurment, checkFirebaseMeasurment , deleteClient , history} from './index';\nimport firebase from 'firebase';\n\nexport function AlreadyMeasurment(props: any) {\n    const customerState = useSelector((state: any) => state);\n    const tailor: any = customerState.tailors[0];\n    const client: any = customerState.customer[0];\n    const dispatch = useDispatch();\n    const promise = () => {\n        firebase.firestore().collection('Measurments').doc(tailor).collection(\"Customer\").get()\n            .then(snapshot => {\n                snapshot.docs.forEach(client => {\n                    const clientName = client.id;\n                    const measurment = client.data().measurmentEle;\n                    checkFirebaseMeasurment(clientName, measurment, dispatch, customerState.measurment);\n                })\n            }).catch()\n    }\n    promise();\n    const saveMeasurment: any = (e: any) => {\n        e.preventDefault();\n\n        const [Length, Width, Neck, Chest, Waist, Bust, ArmLenght, ShoulderLenght, LegLenght] = e.target;\n        const measurmentEle = {\n            Length: Length.value, Width: Width.value, Chest: Chest.value, Bust: Bust.value, Waist: Waist.value, Neck: Neck.value, ArmLenght: ArmLenght.value, Shoulder: ShoulderLenght.value, LegLenght: LegLenght.value,\n        }\n\n        firebase.database().ref().on(\"child_added\", snap => {\n            const promise = firebase.firestore().collection('Tailor App').doc(tailor).collection(\"Measurment\").doc(client).set({\n                measurmentEle\n            });\n            promise.then(() => {\n                alert(\"Data is updated\");\n                checkMeasurment(client, measurmentEle, dispatch, customerState.measurment);\n                history.push(\"/DashBoard\");\n                history.replace(\"/DashBoard\");\n                dispatch(deleteClient());\n            })\n            promise.catch((err) => {\n                alert(err.message);\n                dispatch(deleteClient());\n            })\n        });\n    }\n\n    return (\n        <div >\n            {customerState.tailors.length > 0 ?\n                customerState.measurment.map((measurment: any, index: number) => {\n                    if (measurment[0] === client) {\n                        return (<div key={index} className=\"mr-5\">\n                            <ul key={index} className=\"measurment\">\n                                <li className=\"text-muted\"> Length : {measurment[1].Length}</li>\n                                <li className=\"text-muted\"> Width : {measurment[1].Width}</li>\n                                <li className=\"text-muted\"> Neck : {measurment[1].Neck}</li>\n                                <li className=\"text-muted\"> Waist : {measurment[1].Waist}</li>\n                                <li className=\"text-muted\"> Bust : {measurment[1].Bust}</li>\n                                <li className=\"text-muted\"> Chest : {measurment[1].Chest}</li>\n                                <li className=\"text-muted\"> Arm Lenght : {measurment[1].ArmLenght}</li>\n                                <li className=\"text-muted\"> Shoulder Length : {measurment[1].Shoulder}</li>\n                                <li className=\"text-muted\"> Leg Lenght : {measurment[1].LegLenght}</li>\n                            </ul>\n                            <button className=\"btn btn-outline-danger\" onClick={() => {\n                                history.push('/EditMeasurment')\n                                history.replace('/EditMeasurment');\n                            }} >Edit</button>\n                            <button className=\"btn btn-outline-success\" onClick={() => {\n                                history.push('/Dashboard')\n                                history.replace('/Dashboard');\n                                dispatch(deleteClient());\n                            }}\n                            >Cancle</button>\n                        </div>)\n                    }\n                }) :\n                <div>\n                    <h1 className=\"h1 font-italic text-muted\">\n                        Please login first\n                 </h1>\n                    <button className=\"btn btn-outline-danger\" onClick={\n                        () => {\n                            history.push('/SignIn')\n                            history.replace('/SignIn')\n                        }\n                    }>\n                        Go to Sign In\n                 </button>\n                    <button className=\"btn btn-outline-success\" onClick={\n                        () => {\n                            history.push('/SignUp')\n                            history.replace('/SignUp')\n                        }\n                    }>\n                        Go to Sign Up\n                 </button>\n                </div>\n            }\n        </div>\n    )\n}","/home/faiza/Documents/Git Hub/tailor_app/src/components/Condition.tsx",["111"],"/home/faiza/Documents/Git Hub/tailor_app/src/components/alreadyCondition.tsx",["112","113","114","115","116","117","118"],"import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport firebase from 'firebase';\nimport { checkStitch, checkDeliveredFirebase, checkUnStitchFirebase, checkLostFirebase, checkOutOfOrder, checkLost, checkOutOfOrderFirebase } from './store';\n\nexport const AlreadyCondition = () => {\n    const dispatch = useDispatch();\n    const customerState = useSelector((state: any) => state);\n    const tailor: any = customerState.tailors[0];\n    const client: any = customerState.customer[0];\n    const promise = () => {\n        firebase.firestore().collection('Condition').doc(tailor).collection(\"Sticthed\").get()\n            .then(snapshot => {\n                snapshot.docs.forEach(client => {\n                    const clientName = client.id;\n                    const conditionAmount = client.data().sticthed;\n                    checkStitch(clientName, conditionAmount, customerState, dispatch)\n                })\n            }).catch();\n        firebase.firestore().collection('Condition').doc(tailor).collection(\"Delivered\").get()\n            .then(snapshot => {\n                snapshot.docs.forEach(client => {\n                    const clientName = client.id;\n                    const conditionAmount = client.data().delivered;\n                    checkDeliveredFirebase(clientName, conditionAmount, customerState, dispatch)\n                })\n            }).catch()\n        firebase.firestore().collection('Condition').doc(tailor).collection(\"UnStitched\").get()\n            .then(snapshot => {\n                snapshot.docs.forEach(client => {\n                    const clientName = client.id;\n                    const conditionAmount = client.data().unstitched;\n                    checkUnStitchFirebase(clientName, conditionAmount, customerState, dispatch);\n                })\n            }).catch()\n        firebase.firestore().collection('Condition').doc(tailor).collection(\"Losted\").get()\n            .then(snapshot => {\n                snapshot.docs.forEach(client => {\n                    const clientName = client.id;\n                    const conditionAmount = client.data().losted;\n                    checkLostFirebase(clientName, conditionAmount, customerState, dispatch);\n                })\n            }).catch()\n        firebase.firestore().collection('Condition').doc(tailor).collection(\"OutOfOrder\").get()\n            .then(snapshot => {\n                snapshot.docs.forEach(client => {\n                    const clientName = client.id;\n                    const conditionAmount = client.data().OutOfOrder;\n                    checkOutOfOrder(clientName, conditionAmount, customerState, dispatch);\n                })\n            }).catch()\n    }\n    promise();\n\n    return (\n        <div id=\"condition\" className=\"mt-5 text-left ml-5\">\n            <div className=\"mt-5\">\n                {\n                    customerState.orders.length > 0 ?\n                        customerState.stitch.length > 0 ?\n                            customerState.stitch.map((stitch: any[], index: number) => {\n                                if (stitch[0] === client) {\n                                    return (\n                                        <p className=\"text-muted\" key={index}>  {stitch[1]} orders has stitched.</p>\n                                    )\n                                }\n                            }) : null\n                        : null\n                }\n                {\n                    customerState.orders.length > 0 ?\n                        customerState.delivered.length > 0 ?\n                            customerState.delivered.map((deliver: any[], index: number) => {\n                                if (deliver[0] === client) {\n                                    return (\n                                        <p className=\"text-muted\" key={index}>  {deliver[1]} orders has delivered.</p>\n                                    )\n                                }\n                            }) : null\n                        : null\n                }\n                {\n                    customerState.orders.length > 0 ?\n                        customerState.unStitch.length > 0 ?\n                            customerState.unStitch.map((unStitch: any[], index: number) => {\n                                if (unStitch[0] === client) {\n                                    return (\n                                        <p className=\"text-muted\" key={index}>  {unStitch[1]} orders are un stitched.</p>\n                                    )\n                                } else {\n                                    console.log(unStitch[0], client);\n\n                                }\n                            }) : null\n                        : null\n                }\n                {\n                    customerState.orders.length > 0 ?\n                        customerState.lost.length > 0 ?\n                            customerState.lost.map((losted: any, index: number) => {\n                                if (losted[0] === client) {\n                                    return (\n                                        <p className=\"text-muted\" key={index}> {losted[1]} orders has losted.</p>\n                                    )\n                                }\n                            }) : null\n                        : null\n                }\n                {\n                    customerState.outOfOrder.length > 0 ?\n                        customerState.outOfOrder.length > 0 ?\n                            customerState.outOfOrder.map((outOfOrder: any, index: number) => {\n                                if (outOfOrder[0] === client) {\n                                    return (\n                                        <p className=\"text-muted\" key={index}> {outOfOrder[1]} orders has wrong stitched.</p>\n                                    )\n                                }\n                            }) : null\n                        : null\n                }\n            </div>\n        </div>\n    )\n}","/home/faiza/Documents/Git Hub/tailor_app/src/components/EditMeasurment.tsx",["119","120"],"import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { checkMeasurment, deleteClient } from './index';\nimport firebase from 'firebase';\nimport { history } from './index';\n\nexport function EditMeasurment() {\n    const customerState = useSelector((state: any) => state);\n    const client: any = customerState.customer[0];\n    const tailor: any = customerState.tailors[0];\n    const dispatch = useDispatch();\n    const saveMeasurment: any = (e: any) => {\n        e.preventDefault();\n\n        const [Length, Width, Neck, Chest, Waist, Bust, ArmLenght, ShoulderLenght, LegLenght] = e.target;\n        const measurmentEle = {\n            Length: Length.value, Width: Width.value, Chest: Chest.value, Bust: Bust.value, Waist: Waist.value, Neck: Neck.value, ArmLenght: ArmLenght.value, Shoulder: ShoulderLenght.value, LegLenght: LegLenght.value,\n        }\n\n        firebase.database().ref().on(\"child_added\", snap => {\n            const promise = firebase.firestore().collection('Customers').doc(tailor).collection(client).doc(\"Measurment\").set({\n                measurmentEle\n            });\n            promise.then(() => {\n                alert(\"Data is updated\");\n                checkMeasurment(client, measurmentEle, dispatch, customerState.measurment);\n                history.push(\"/DashBoard\");\n                history.replace(\"/DashBoard\");\n                dispatch(deleteClient());\n            })\n            promise.catch((err) => {\n                alert(err.message);\n                dispatch(deleteClient());\n            })\n        });\n    }\n    return (\n        <div >\n            <div className=\"mr-5\">\n                <div id=\"editM\">\n                    {customerState.measurment.length > 0 ?\n                        customerState.measurment.map((measurment: any, index: number) => {\n                            let Length = measurment[1].Length;\n                            const handleLength = (event: any) => {\n                                Length = \"\";\n                                console.log(Length, event.target.value);\n                            };\n                            if (measurment[0] === client) {\n                                return (<form onSubmit={saveMeasurment}>\n                                    <div className=\"EditM\">\n                                        <div>\n                                            <label>Length</label>\n                                            <input className=\"mt-1\" type=\"number\" placeholder=\"Length\" onChange={(e) => {\n                                                Length = \"\";\n                                                e.target.value = \"\"\n                                                console.log(e.target.value);\n\n                                            }} value={Length} required />\n                                        </div>\n                                        <div>\n                                            <label>Width</label>\n                                            <input className=\"mt-1\" type=\"number\" placeholder=\"Width\" required value={measurment[1].Width} />\n                                        </div>\n                                        <div> <label>Chest</label>\n                                            <input className=\"mt-1\" type=\"number\" placeholder=\"Chest\" required value={measurment[1].Chest} />\n                                        </div>\n                                    </div>\n                                    <div className=\"EditM\">\n                                        <div>\n                                            <label>Waist</label>\n                                            <input className=\"mt-1\" type=\"number\" placeholder=\"Waist\" required value={measurment[1].Waist} />\n                                        </div>\n                                        <div>\n                                            <label>Bust</label>\n                                            <input className=\"mt-1\" type=\"number\" placeholder=\"Bust\" required value={measurment[1].Bust} />\n                                        </div>\n                                        <div>\n                                            <label>Arm</label>\n                                            <input className=\"mt-1\" type=\"number\" placeholder=\"Arm Lenght\" required value={measurment[1].ArmLenght} />\n                                        </div>\n                                    </div>\n                                    <div className=\"EditM\">\n                                        <div>\n                                            <label>Shoulder</label>\n                                            <input className=\"mt-1\" type=\"number\" placeholder=\"Shoulder Lenght\" required value={measurment[1].Shoulder} />\n                                        </div>\n                                        <div>\n                                            <label>Neck</label>\n                                            <input className=\"mt-1\" type=\"number\" placeholder=\"Neck\" required value={measurment[1].Neck} />\n                                        </div>\n                                        <div>\n                                            <label>Leg Length</label>\n                                            <input className=\"mt-1\" type=\"number\" placeholder=\"Leg Lenght\" required value={measurment[1].LegLenght} />\n                                        </div>\n                                    </div>\n                                    <button className=\"btn btn-outline-success d-inline m-0 mt-1 w-25\" type=\"submit\">Edit Measurment</button>\n                                    <button className=\"btn btn-outline-danger d-inline m-0 mt-1 ml-1 w-25\" type=\"button\" onClick={() => {\n                                        history.push(\"/DashBoard\"); history.replace('/DashBoard')\n                                        dispatch(deleteClient());\n                                    }}>Cancle</button>\n                                </form>)\n                            }\n                        })\n                        :\n                        <div>\n                            <h1 className=\"h1 font-italic text-muted\">\n                                Please login first\n                             </h1>\n                            <button className=\"btn btn-outline-danger\" onClick={\n                                () => {\n                                    history.push('/SignIn')\n                                    history.replace('/SignIn')\n                                }\n                            }>\n                                Go to Sign In\n                             </button>\n                            <button className=\"btn btn-outline-success\" onClick={\n                                () => {\n                                    history.push('/SignUp')\n                                    history.replace('/SignUp')\n                                }\n                            }>\n                                Go to Sign Up\n                             </button>\n                        </div>\n                    }\n                </div>\n            </div>\n        </div >\n    )\n}\n\n",["121","122"],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"123","replacedBy":"127"},{"ruleId":"125","replacedBy":"128"},{"ruleId":"123","replacedBy":"129"},{"ruleId":"125","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":25,"column":11,"nodeType":"133","messageId":"134","endLine":25,"endColumn":30},{"ruleId":"131","severity":1,"message":"135","line":28,"column":51,"nodeType":"133","messageId":"134","endLine":28,"endColumn":55},{"ruleId":"136","severity":1,"message":"137","line":53,"column":81,"nodeType":"138","messageId":"139","endLine":53,"endColumn":83},{"ruleId":"131","severity":1,"message":"140","line":331,"column":11,"nodeType":"133","messageId":"134","endLine":331,"endColumn":17},{"ruleId":"141","severity":1,"message":"142","line":436,"column":97,"nodeType":"143","messageId":"144","endLine":436,"endColumn":98,"fix":"145"},{"ruleId":"141","severity":1,"message":"142","line":438,"column":100,"nodeType":"143","messageId":"144","endLine":438,"endColumn":101,"fix":"146"},{"ruleId":"141","severity":1,"message":"142","line":440,"column":95,"nodeType":"143","messageId":"144","endLine":440,"endColumn":96,"fix":"147"},{"ruleId":"123","replacedBy":"148"},{"ruleId":"125","replacedBy":"149"},{"ruleId":"131","severity":1,"message":"150","line":2,"column":8,"nodeType":"133","messageId":"134","endLine":2,"endColumn":16},{"ruleId":"136","severity":1,"message":"137","line":27,"column":68,"nodeType":"138","messageId":"139","endLine":27,"endColumn":70},{"ruleId":"131","severity":1,"message":"132","line":22,"column":11,"nodeType":"133","messageId":"134","endLine":22,"endColumn":30},{"ruleId":"136","severity":1,"message":"137","line":51,"column":79,"nodeType":"138","messageId":"139","endLine":51,"endColumn":81},{"ruleId":"136","severity":1,"message":"137","line":8,"column":68,"nodeType":"138","messageId":"139","endLine":8,"endColumn":70},{"ruleId":"131","severity":1,"message":"151","line":4,"column":106,"nodeType":"133","messageId":"134","endLine":4,"endColumn":115},{"ruleId":"131","severity":1,"message":"152","line":4,"column":117,"nodeType":"133","messageId":"134","endLine":4,"endColumn":140},{"ruleId":"136","severity":1,"message":"137","line":61,"column":85,"nodeType":"138","messageId":"139","endLine":61,"endColumn":87},{"ruleId":"136","severity":1,"message":"137","line":73,"column":89,"nodeType":"138","messageId":"139","endLine":73,"endColumn":91},{"ruleId":"136","severity":1,"message":"137","line":85,"column":89,"nodeType":"138","messageId":"139","endLine":85,"endColumn":91},{"ruleId":"136","severity":1,"message":"137","line":100,"column":81,"nodeType":"138","messageId":"139","endLine":100,"endColumn":83},{"ruleId":"136","severity":1,"message":"137","line":112,"column":91,"nodeType":"138","messageId":"139","endLine":112,"endColumn":93},{"ruleId":"136","severity":1,"message":"137","line":42,"column":87,"nodeType":"138","messageId":"139","endLine":42,"endColumn":89},{"ruleId":"131","severity":1,"message":"153","line":44,"column":35,"nodeType":"133","messageId":"134","endLine":44,"endColumn":47},{"ruleId":"123","replacedBy":"154"},{"ruleId":"125","replacedBy":"155"},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],["156"],["157"],["156"],["157"],"@typescript-eslint/no-unused-vars","'saveMeasurment' is assigned a value but never used.","Identifier","unusedVar","'Bust' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'tailor' is assigned a value but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"158","text":"159"},{"range":"160","text":"159"},{"range":"161","text":"159"},["156"],["157"],"'firebase' is defined but never used.","'checkLost' is defined but never used.","'checkOutOfOrderFirebase' is defined but never used.","'handleLength' is assigned a value but never used.",["156"],["157"],"no-global-assign","no-unsafe-negation",[13443,13453],"\n        .",[13562,13572],[13676,13686]]