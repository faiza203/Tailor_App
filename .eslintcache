[{"/home/faiza/Documents/Git Hub/tailor_app/src/index.tsx":"1","/home/faiza/Documents/Git Hub/tailor_app/src/components/index.tsx":"2","/home/faiza/Documents/Git Hub/tailor_app/src/components/Home.tsx":"3","/home/faiza/Documents/Git Hub/tailor_app/src/components/SignIn.tsx":"4","/home/faiza/Documents/Git Hub/tailor_app/src/components/Nav.tsx":"5","/home/faiza/Documents/Git Hub/tailor_app/src/components/firebase.tsx":"6","/home/faiza/Documents/Git Hub/tailor_app/src/components/NotFound.tsx":"7","/home/faiza/Documents/Git Hub/tailor_app/src/components/AddMeasurment.tsx":"8","/home/faiza/Documents/Git Hub/tailor_app/src/components/history.tsx":"9","/home/faiza/Documents/Git Hub/tailor_app/src/components/store.tsx":"10","/home/faiza/Documents/Git Hub/tailor_app/src/components/SignUp.tsx":"11","/home/faiza/Documents/Git Hub/tailor_app/src/components/Customers.tsx":"12","/home/faiza/Documents/Git Hub/tailor_app/src/components/DashBoard.tsx":"13","/home/faiza/Documents/Git Hub/tailor_app/src/components/reducer.tsx":"14","/home/faiza/Documents/Git Hub/tailor_app/src/App.tsx":"15","/home/faiza/Documents/Git Hub/tailor_app/src/components/AddDetail.tsx":"16","/home/faiza/Documents/Git Hub/tailor_app/src/components/AddOrder.tsx":"17","/home/faiza/Documents/Git Hub/tailor_app/src/components/AlreadyMeasurment.tsx":"18"},{"size":330,"mtime":1606992343000,"results":"19","hashOfConfig":"20"},{"size":629,"mtime":1607246722765,"results":"21","hashOfConfig":"20"},{"size":656,"mtime":1606992343000,"results":"22","hashOfConfig":"20"},{"size":1437,"mtime":1607164032408,"results":"23","hashOfConfig":"20"},{"size":1042,"mtime":1606992343000,"results":"24","hashOfConfig":"20"},{"size":562,"mtime":1606992343000,"results":"25","hashOfConfig":"20"},{"size":578,"mtime":1606992343000,"results":"26","hashOfConfig":"20"},{"size":680,"mtime":1607250343372,"results":"27","hashOfConfig":"20"},{"size":121,"mtime":1606992343000,"results":"28","hashOfConfig":"20"},{"size":4179,"mtime":1607245398096,"results":"29","hashOfConfig":"20"},{"size":1739,"mtime":1607163312758,"results":"30","hashOfConfig":"20"},{"size":1665,"mtime":1607243828756,"results":"31","hashOfConfig":"20"},{"size":1736,"mtime":1607243514380,"results":"32","hashOfConfig":"20"},{"size":1530,"mtime":1607245254558,"results":"33","hashOfConfig":"20"},{"size":793,"mtime":1607164589095,"results":"34","hashOfConfig":"20"},{"size":2279,"mtime":1607250305215,"results":"35","hashOfConfig":"20"},{"size":820,"mtime":1607251202030,"results":"36","hashOfConfig":"20"},{"size":1445,"mtime":1607250528143,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"34fyjp",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/faiza/Documents/Git Hub/tailor_app/src/index.tsx",[],["81","82"],"/home/faiza/Documents/Git Hub/tailor_app/src/components/index.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/Home.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/SignIn.tsx",["83","84"],"import React, { Component } from 'react';\nimport firebase from 'firebase';\nimport { history } from './history';\nimport { useDispatch } from 'react-redux';\nimport { addTailor } from './store';\n\n\n\nexport function SignIn() {\n  const dispatch = useDispatch();\n  const signIn = (e: any) => {\n    e.preventDefault();\n    const [email, password]: any[] = e.target;\n    const auth = firebase.auth();\n    const promise = auth.signInWithEmailAndPassword(email.value, password.value)\n      .then(() => {\n        sendToFirebaseTailor(e)\n      })\n      .catch((err) => {\n        alert(err.message);\n      })\n  }\n\n  const sendToFirebaseTailor = (e: any) => {\n    const promise = firebase.database().ref().set({ signIn: e.target[0].value })\n    promise.then(() => {\n      dispatch(addTailor(e.target[0].value))\n      alert(\"Account is login successfully !!!\");\n      history.push('/DashBoard');\n      history.replace('/DashBoard');\n    })\n      .catch((err: any) => {\n        alert(err.message);\n      })\n  }\n  return (\n    <form onSubmit={signIn}>\n      <label className=\"text-dark\">Email :</label>\n      <input className=\"form-control\" type=\"email\" placeholder=\"Please write email here\" required />\n      <label className=\"text-dark\">Password :</label>\n      <input className=\"form-control\" type=\"password\" placeholder=\"Enter password here\" required />\n      <button className=\"btn btn-outline-danger\" type=\"submit\">Sign In</button>\n    </form>\n  )\n}","/home/faiza/Documents/Git Hub/tailor_app/src/components/Nav.tsx",["85"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nexport class Nav extends Component {\n    render() {\n        return (\n            <div className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                <a className=\"navbar-brand\">Navbar</a>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item active\">\n                            <Link to=\"/\" className=\"nav-link\">Home <span className=\"sr-only\">(current)</span></Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to=\"/SignUp\" className=\"nav-link\">Sign Up</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to=\"/SignIn\" className=\"nav-link\">Sign In</Link>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n","/home/faiza/Documents/Git Hub/tailor_app/src/components/firebase.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/NotFound.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/AddMeasurment.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/history.tsx",["86"],"import React from 'react'\nimport { createBrowserHistory } from 'history';\nexport const history = createBrowserHistory();\n","/home/faiza/Documents/Git Hub/tailor_app/src/components/store.tsx",["87","88"],"import { createStore } from 'redux';\nimport TailorReducer from './reducer';\nimport { v4 as uuid } from 'uuid';\nimport firebase from 'firebase';\nexport const store = createStore(TailorReducer);\nexport function addTailor(tailor: any) {\n    return {\n        type: \"Add_Tailor\",\n        tailor\n    }\n}\n\nexport const checkCustomer = (client: any, customerStateClient: any, dispatch: any) => {\n    let arr = [];\n    if (customerStateClient.length > 0) {\n        customerStateClient.forEach((customer: any) => {\n            if(customer !== client) {\n                arr.push(\"yes\");\n            }\n        })\n    }\n    if (arr.length === customerStateClient.length) {\n        dispatch(addCustomerR(client))\n    }\n    else{\n        alert(\"You have already this user\")\n    }\n}\n\nexport function addCustomerR(customer: any) {\n    firebase.database().ref().on(\"child_added\", snap => {\n        const tailor = snap.val();\n        const promise = firebase.firestore().collection('Tailor App').doc('Tailor').collection(tailor).doc(uuid()).set({\n            id: customer\n        });\n        promise.then(() => {\n        })\n        promise.catch((err) => {\n            alert(err.message)\n        })\n    });\n    return {\n        type: \"Add_Customer\",\n        customer,\n    }\n}\n\n\nexport function checkCustomerFirebase(client: any, customerStateClient: any, dispatch: any) {\n    let arr = [];\n    if (customerStateClient.length > 0) {\n        customerStateClient.forEach((customer: any) => {\n            if (customer !== client) {\n                arr.push(\"yes\");\n            }\n        })\n    }\n    if (arr.length === customerStateClient.length) {\n        dispatch(addFirebaseCustomer(client))\n    }\n}\n\nexport function addFirebaseCustomer(client: any) {\n    return {\n        type: \"Fecth_Customer\",\n        client\n    }\n}\n\nexport const checkMeasurment = (client: any, measurment: any, dispatch: any, customerStateMeasurment: any) => {\n    if (customerStateMeasurment.length > 0) {\n        customerStateMeasurment.forEach((customer: any, index: number) => {\n            if (customer[0] === client) {\n                dispatch(updateMeasurmentR(client, measurment, index))\n            } else {\n                dispatch(addMeasurmentR(client, measurment));\n            }\n        })\n    } else {\n        dispatch(addMeasurmentR(client, measurment))\n    }\n}\n\n\nexport function addMeasurmentR(client: any, measurment: measurment) {\n    return {\n        type: \"Add_Measurment\",\n        client,\n        measurment\n    }\n}\nexport function updateMeasurmentR(client: any, measurment: measurment, index: number) {\n    return {\n        type: \"Update_Measurment\",\n        client,\n        index,\n        measurment\n    }\n}\n\ntype measurment = {\n    Length: number, Width: number, Neck: number, Waist: number, Middle: number, LegLenght: number,\n\n}\n\nexport function addOrder(client: any, orders: number) {\n    firebase.database().ref().on(\"child_added\", snap => {\n        const tailor = snap.val();\n        const promise = firebase.firestore().collection('Tailor App').doc('clients').collection(tailor).doc(client).set({\n            orders: orders\n        }).then().catch();\n    });\n    return {\n        type: \"Add_Order\",\n        client,\n        orders\n    }\n}\nexport function checkOrder(client: any, orders: string, customerStateOrders: any, dispatch: any) {\n    if (customerStateOrders.length > 0) {\n        customerStateOrders.forEach((customer: any, index: number) => {\n            if (customer[0] === client) {\n                const order: number = parseInt(customer[1]) + parseInt(orders);\n                dispatch(updateOrder(client, index, order));\n            }\n        })\n    } else {\n        dispatch(addOrder(client, parseInt(orders)))\n    }\n}\n\nexport function updateOrder(client: any, index: any, order: number) {\n    firebase.database().ref().on(\"child_added\", snap => {\n        const tailor = snap.val();\n        const promise = firebase.firestore().collection('Tailor App').doc(\"Clients\").collection(tailor).doc(client + \" Orders\").set({\n            orders: order\n        }).then().catch();\n    });\n    return {\n        type: \"Update_Order\",\n        client,\n        orders: order,\n        index\n    }\n}\n\n","/home/faiza/Documents/Git Hub/tailor_app/src/components/SignUp.tsx",["89"],"import React from 'react';\nimport firebase from 'firebase';\nimport { configFirebase } from './firebase';\nimport { history } from './history';\nimport { useDispatch } from 'react-redux';\nimport { addTailor } from './store';\n\nconfigFirebase();\n\nexport function SignUp() {\n    const dispatch = useDispatch();\n    const signUpFun = (e: any) => {\n        e.preventDefault();\n        const [email, password, confirmPassword]: any[] = e.target;\n        const auth = firebase.auth();\n        if (password.value !== confirmPassword.value) {\n            alert(\"Password does not match\");\n        }\n        else {\n            const promise = auth.createUserWithEmailAndPassword(email.value, password.value)\n                .then((user) => {\n                    alert(\"Account is created successfully !!!\");\n                    dispatch(addTailor(user.user?.email))\n                    history.push('/SignIn');\n                    history.replace('./SignIn')\n                })\n                .catch((err) => {\n                    alert(err.message);\n                })\n        }\n    }\n    return (\n        <form onSubmit={signUpFun}>\n            <label className=\"text-dark\">Email :</label>\n            <input className=\"form-control\" type=\"email\" placeholder=\"Please write email here\" required />\n            <label className=\"text-dark\">Password :</label>\n            <input className=\"form-control\" type=\"password\" placeholder=\"Enter password here\" required />\n            <label className=\"text-dark\">Confirm Password :</label>\n            <input className=\"form-control\" type=\"password\" placeholder=\"Rewrite password here\" required />\n            <button className=\"btn btn-outline-warning\" type=\"submit\">SignUp</button>\n        </form>\n    )\n}\n","/home/faiza/Documents/Git Hub/tailor_app/src/components/Customers.tsx",["90","91"],"import React from \"react\";\nimport { useSelector } from 'react-redux';\nimport firebase from 'firebase';\nimport { history } from './index';\nimport { useDispatch } from 'react-redux';\nimport { addCustomerR, checkCustomer, checkCustomerFirebase } from \"./store\";\n\n\nexport const Customers = (props: any) => {\n    const customerState = useSelector((state: any) => state);\n    const dispatch = useDispatch();\n    const promise = () => {\n        firebase.firestore().collection('Tailor App').doc('Tailor').collection(props.name).get()\n            .then(snapshot => {\n                snapshot.docs.forEach(clients => {\n                    const client = clients.data().id;\n                    checkCustomerFirebase(client, customerState.clients, dispatch)\n                }\n                )\n            }).catch()\n    }\n    promise();\n    return (\n        <div>\n            <h2 className=\"h2 text-muted\">Customers</h2>\n            {\n                customerState.clients.length > 0 ?\n                    customerState.clients.map((customer: any, index: number) => {\n                        return (<div key={index}><h3 className=\"h3 text-muted d-inline mt-2\">{customer}</h3>\n                            <button id={customer + \"measurment\"} className=\"btn btn-outline-success d-inline\" onClick={() => {\n                                localStorage.setItem(\"customer\", customer);\n                                history.push(\"/AddDetail\");\n                                history.replace(\"/AddDetail\")\n                            }}>Edit Detail</button>\n                        </div>)\n                    }) :\n                    null\n            }\n        </div>\n    );\n};\n","/home/faiza/Documents/Git Hub/tailor_app/src/components/DashBoard.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/reducer.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/App.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/AddDetail.tsx",["92"],"/home/faiza/Documents/Git Hub/tailor_app/src/components/AddOrder.tsx",["93"],"/home/faiza/Documents/Git Hub/tailor_app/src/components/AlreadyMeasurment.tsx",["94","95"],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":26},{"ruleId":"100","severity":1,"message":"104","line":15,"column":11,"nodeType":"102","messageId":"103","endLine":15,"endColumn":18},{"ruleId":"105","severity":1,"message":"106","line":7,"column":17,"nodeType":"107","endLine":7,"endColumn":45},{"ruleId":"100","severity":1,"message":"108","line":1,"column":8,"nodeType":"102","messageId":"103","endLine":1,"endColumn":13},{"ruleId":"100","severity":1,"message":"104","line":109,"column":15,"nodeType":"102","messageId":"103","endLine":109,"endColumn":22},{"ruleId":"100","severity":1,"message":"104","line":135,"column":15,"nodeType":"102","messageId":"103","endLine":135,"endColumn":22},{"ruleId":"100","severity":1,"message":"104","line":20,"column":19,"nodeType":"102","messageId":"103","endLine":20,"endColumn":26},{"ruleId":"100","severity":1,"message":"109","line":6,"column":10,"nodeType":"102","messageId":"103","endLine":6,"endColumn":22},{"ruleId":"100","severity":1,"message":"110","line":6,"column":24,"nodeType":"102","messageId":"103","endLine":6,"endColumn":37},{"ruleId":"100","severity":1,"message":"111","line":2,"column":10,"nodeType":"102","messageId":"103","endLine":2,"endColumn":23},{"ruleId":"112","severity":1,"message":"113","line":12,"column":68,"nodeType":"114","messageId":"115","endLine":12,"endColumn":70},{"ruleId":"100","severity":1,"message":"116","line":4,"column":10,"nodeType":"102","messageId":"103","endLine":4,"endColumn":24},{"ruleId":"112","severity":1,"message":"113","line":12,"column":85,"nodeType":"114","messageId":"115","endLine":12,"endColumn":87},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"@typescript-eslint/no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'promise' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'React' is defined but never used.","'addCustomerR' is defined but never used.","'checkCustomer' is defined but never used.","'AddMeasurment' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'addMeasurmentR' is defined but never used.","no-global-assign","no-unsafe-negation"]