[{"/home/faiza/Documents/Git Hub/tailor_app/src/index.tsx":"1","/home/faiza/Documents/Git Hub/tailor_app/src/components/index.tsx":"2","/home/faiza/Documents/Git Hub/tailor_app/src/components/Home.tsx":"3","/home/faiza/Documents/Git Hub/tailor_app/src/components/SignIn.tsx":"4","/home/faiza/Documents/Git Hub/tailor_app/src/components/firebase.tsx":"5","/home/faiza/Documents/Git Hub/tailor_app/src/components/NotFound.tsx":"6","/home/faiza/Documents/Git Hub/tailor_app/src/components/AddMeasurment.tsx":"7","/home/faiza/Documents/Git Hub/tailor_app/src/components/history.tsx":"8","/home/faiza/Documents/Git Hub/tailor_app/src/components/store.tsx":"9","/home/faiza/Documents/Git Hub/tailor_app/src/components/SignUp.tsx":"10","/home/faiza/Documents/Git Hub/tailor_app/src/components/Customers.tsx":"11","/home/faiza/Documents/Git Hub/tailor_app/src/components/DashBoard.tsx":"12","/home/faiza/Documents/Git Hub/tailor_app/src/components/reducer.tsx":"13","/home/faiza/Documents/Git Hub/tailor_app/src/App.tsx":"14","/home/faiza/Documents/Git Hub/tailor_app/src/components/AddDetail.tsx":"15","/home/faiza/Documents/Git Hub/tailor_app/src/components/AddOrder.tsx":"16","/home/faiza/Documents/Git Hub/tailor_app/src/components/AlreadyMeasurment.tsx":"17","/home/faiza/Documents/Git Hub/tailor_app/src/components/Condition.tsx":"18","/home/faiza/Documents/Git Hub/tailor_app/src/components/alreadyCondition.tsx":"19","/home/faiza/Documents/Git Hub/tailor_app/src/components/EditMeasurment.tsx":"20"},{"size":330,"mtime":1606992343000,"results":"21","hashOfConfig":"22"},{"size":937,"mtime":1607863654481,"results":"23","hashOfConfig":"22"},{"size":656,"mtime":1606992343000,"results":"24","hashOfConfig":"22"},{"size":1598,"mtime":1607919334303,"results":"25","hashOfConfig":"22"},{"size":562,"mtime":1606992343000,"results":"26","hashOfConfig":"22"},{"size":595,"mtime":1607251724440,"results":"27","hashOfConfig":"22"},{"size":7215,"mtime":1607927418761,"results":"28","hashOfConfig":"22"},{"size":95,"mtime":1607326904207,"results":"29","hashOfConfig":"22"},{"size":15308,"mtime":1607926476917,"results":"30","hashOfConfig":"22"},{"size":2503,"mtime":1607919223678,"results":"31","hashOfConfig":"22"},{"size":1927,"mtime":1607927300883,"results":"32","hashOfConfig":"22"},{"size":2175,"mtime":1607925159349,"results":"33","hashOfConfig":"22"},{"size":3719,"mtime":1607926084156,"results":"34","hashOfConfig":"22"},{"size":975,"mtime":1607760005743,"results":"35","hashOfConfig":"22"},{"size":2599,"mtime":1607917782280,"results":"36","hashOfConfig":"22"},{"size":1452,"mtime":1607434369573,"results":"37","hashOfConfig":"22"},{"size":3989,"mtime":1607927463486,"results":"38","hashOfConfig":"22"},{"size":1155,"mtime":1607863727291,"results":"39","hashOfConfig":"22"},{"size":5734,"mtime":1607525897221,"results":"40","hashOfConfig":"22"},{"size":6629,"mtime":1607918814515,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"34fyjp",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/faiza/Documents/Git Hub/tailor_app/src/index.tsx",[],["90","91"],"/home/faiza/Documents/Git Hub/tailor_app/src/components/index.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/Home.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/SignIn.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/firebase.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/NotFound.tsx",[],["92","93"],"/home/faiza/Documents/Git Hub/tailor_app/src/components/AddMeasurment.tsx",["94","95","96","97"],"/home/faiza/Documents/Git Hub/tailor_app/src/components/history.tsx",[],["98","99"],"/home/faiza/Documents/Git Hub/tailor_app/src/components/store.tsx",["100"],"/home/faiza/Documents/Git Hub/tailor_app/src/components/SignUp.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/Customers.tsx",["101"],"import { useSelector } from 'react-redux';\nimport firebase from 'firebase';\nimport { history } from './index';\nimport { useDispatch } from 'react-redux';\nimport { addClient, deleteCustomer } from \"./store\";\n\n\nexport const Customers = (props: any) => {\n    const customerState = useSelector((state: any) => state);\n    const dispatch = useDispatch();\n\n    return (\n        <div>\n            {\n                customerState.clients.length > 0 ?\n                    customerState.clients.map((customer: any, index: number) => {\n                        return (<div key={index} className=\"mt-1  text-right mr-5\">\n                            <h3 className=\"h3 text-muted d-inline mt-2\">{customer}</h3>\n                            <button id={customer + \"measurment\"} className=\"btn btn-outline-success d-inline m-2 \" onClick={() => {\n                                dispatch(addClient(customer));\n                                history.push(\"/Measurment\");\n                                history.replace(\"/Measurment\");\n                            }}>Measurment</button>\n                            <button id={customer + \"orders\"} className=\"btn btn-outline-danger d-inline m-1\" onClick={() => {\n                                dispatch(addClient(customer));\n                                history.push(\"/Orders\");\n                                history.replace(\"/Orders\");\n                            }}>Orders</button>\n                            <button id={customer + \"delete\"} className=\"btn btn-outline-primary d-inline m-1 mr-5\" onClick={() => {\n                                dispatch(deleteCustomer(customer, customerState));\n                                // history.push(\"/Orders\");\n                                // history.replace(\"/Orders\");\n                            }}>Delete</button>\n                        </div>)\n                    }) :\n                    null\n            }\n        </div>\n    );\n};\n","/home/faiza/Documents/Git Hub/tailor_app/src/components/DashBoard.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/reducer.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/App.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/AddDetail.tsx",["102"],"/home/faiza/Documents/Git Hub/tailor_app/src/components/AddOrder.tsx",["103"],"import React from 'react';\nimport firebase from 'firebase';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { checkOrderFirebase } from './index';\nexport const AddOrder = (props: any) => {\n    const dispatch = useDispatch();\n    const customerState = useSelector((state: any) => state);\n    const tailor: any = localStorage.getItem(\"tailor\");\n    const promise = () => {\n        firebase.firestore().collection('Tailor App').doc(tailor).collection(\"Orders\").get()\n            .then(snapshot => {\n                snapshot.docs.forEach(client => {\n                    const clientName = client.id;\n                    const orders = client.data().orders;\n\n                    checkOrderFirebase(clientName, orders, customerState.orders, dispatch)\n                })\n            });\n    }\n    promise();\n\n    return (<div>\n        <h1 className=\"h1 text-muted\">Orders</h1>\n        <p className=\"text-muted\">If you want to stitch new dress: </p>\n        <input className=\"d-inline form-control\" type=\"text\" placeholder=\"Add number of orders here\" />\n        {customerState.orders.length > 0 ?\n            customerState.orders.map((order: any[], index: number) => {\n                if (order[0] === props.client) {\n                    return (\n                        <p key={index} className=\"text-muted mt-1\">Already Orders are {order[1]}</p>\n                    )\n                }\n            }) :\n            null\n        }\n    </div>)\n}",["104","105"],"/home/faiza/Documents/Git Hub/tailor_app/src/components/AlreadyMeasurment.tsx",["106","107"],"import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { checkMeasurment, checkFirebaseMeasurment } from './index';\nimport firebase from 'firebase';\nimport { history } from './index';\n\nexport function AlreadyMeasurment(props: any) {\n    const tailor: any = localStorage.getItem(\"tailor\");\n    const client: any = localStorage.getItem(\"customer\");\n    const dispatch = useDispatch();\n    const customerState = useSelector((state: any) => state);\n    const promise = () => {\n        firebase.firestore().collection('Tailor App').doc(tailor).collection(\"Measurment\").get()\n            .then(snapshot => {\n                snapshot.docs.forEach(client => {\n                    const clientName = client.id;\n                    const measurment = client.data().measurmentEle;\n                    checkFirebaseMeasurment(clientName, measurment, dispatch, customerState.measurment);\n                })\n            }).catch()\n    }\n    promise();\n    const saveMeasurment: any = (e: any) => {\n        e.preventDefault();\n\n        const [Length, Width, Neck, Chest, Waist, Bust, ArmLenght, ShoulderLenght, LegLenght] = e.target;\n        const measurmentEle = {\n            Length: Length.value, Width: Width.value, Chest: Chest.value, Bust: Bust.value, Waist: Waist.value, Neck: Neck.value, ArmLenght: ArmLenght.value, Shoulder: ShoulderLenght.value, LegLenght: LegLenght.value,\n        }\n\n        firebase.database().ref().on(\"child_added\", snap => {\n            const promise = firebase.firestore().collection('Tailor App').doc(tailor).collection(\"Measurment\").doc(client).set({\n                measurmentEle\n            });\n            promise.then(() => {\n                alert(\"Data is updated\");\n                checkMeasurment(client, measurmentEle, dispatch, customerState.measurment);\n                history.push(\"/DashBoard\");\n                history.replace(\"/DashBoard\");\n            })\n            promise.catch((err) => {\n                alert(err.message)\n            })\n        });\n    }\n\n    return (\n        <div >\n            {customerState.measurment.length > 0 ?\n                customerState.measurment.map((measurment: any, index: number) => {\n                    if (measurment[0] === props.client) {\n                        return (<div key={index} className=\"mr-5\">\n                            <ul key={index} className=\"measurment\">\n                                <li className=\"text-muted\"> Length : {measurment[1].Length}</li>\n                                <li className=\"text-muted\"> Width : {measurment[1].Width}</li>\n                                <li className=\"text-muted\"> Neck : {measurment[1].Neck}</li>\n                                <li className=\"text-muted\"> Waist : {measurment[1].Waist}</li>\n                                <li className=\"text-muted\"> Bust : {measurment[1].Bust}</li>\n                                <li className=\"text-muted\"> Chest : {measurment[1].Chest}</li>\n                                <li className=\"text-muted\"> Arm Lenght : {measurment[1].ArmLenght}</li>\n                                <li className=\"text-muted\"> Shoulder Length : {measurment[1].Shoulder}</li>\n                                <li className=\"text-muted\"> Leg Lenght : {measurment[1].LegLenght}</li>\n                            </ul>\n                            <button className=\"btn btn-outline-danger\" onClick={() => {\n                                history.push('/EditMeasurment')\n                                history.replace('/EditMeasurment');\n                            }} >Edit</button>\n                            <button className=\"btn btn-outline-success\" onClick={() => {\n                                history.push('/Dashboard')\n                                history.replace('/Dashboard');\n                            }}\n                            >Cancle</button>\n                        </div>)\n                    }\n                }) :\n                null\n            }\n        </div>\n    )\n}","/home/faiza/Documents/Git Hub/tailor_app/src/components/Condition.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/alreadyCondition.tsx",["108","109","110","111","112","113","114"],"import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport firebase from 'firebase';\nimport { checkStitch, checkDeliveredFirebase, checkUnStitchFirebase, checkLostFirebase, checkOutOfOrder, checkLost, checkOutOfOrderFirebase } from './store';\n\nexport const AlreadyCondition = (props: any) => {\n    const dispatch = useDispatch();\n    const customerState = useSelector((state: any) => state);\n    const promise = () => {\n        firebase.firestore().collection('Tailor App').doc(props.tailor).collection(\"Sticthed\").get()\n            .then(snapshot => {\n                snapshot.docs.forEach(client => {\n                    const clientName = client.id;\n                    const conditionAmount = client.data().sticthed;\n                    checkStitch(clientName, conditionAmount, customerState.stitch, dispatch)\n                })\n            }).catch();\n        firebase.firestore().collection('Tailor App').doc(props.tailor).collection(\"Delivered\").get()\n            .then(snapshot => {\n                snapshot.docs.forEach(client => {\n                    const clientName = client.id;\n                    const conditionAmount = client.data().delivered;\n                    checkDeliveredFirebase(clientName, conditionAmount, customerState.delivered, dispatch)\n                })\n            }).catch()\n        firebase.firestore().collection('Tailor App').doc(props.tailor).collection(\"UnStitched\").get()\n            .then(snapshot => {\n                snapshot.docs.forEach(client => {\n                    const clientName = client.id;\n                    const conditionAmount = client.data().unstitched;\n                    checkUnStitchFirebase(clientName, conditionAmount, customerState.unStitch, dispatch);\n                })\n            }).catch()\n        firebase.firestore().collection('Tailor App').doc(props.tailor).collection(\"Losted\").get()\n            .then(snapshot => {\n                snapshot.docs.forEach(client => {\n                    const clientName = client.id;\n                    const conditionAmount = client.data().losted;\n                    checkLostFirebase(props.tailor, clientName, conditionAmount, customerState.lost, dispatch);\n                })\n            }).catch()\n        firebase.firestore().collection('Tailor App').doc(props.tailor).collection(\"OutOfOrder\").get()\n            .then(snapshot => {\n                snapshot.docs.forEach(client => {\n                    const clientName = client.id;\n                    const conditionAmount = client.data().OutOfOrder;\n                    checkOutOfOrder(props.tailor, clientName, conditionAmount, customerState.outOfOrder, dispatch);\n                })\n            }).catch()\n    }\n    promise();\n\n    return (\n        <div id=\"condition\">\n            {\n                customerState.orders.length > 0 ?\n                    customerState.stitch.length > 0 ?\n                        customerState.stitch.map((stitch: any[], index: number) => {\n                            if (stitch[0] === props.client) {\n                                return (\n                                    <p className=\"text-muted\" key={index}>  {stitch[1]} orders has stitched.</p>\n                                )\n                            }\n                        }) : null\n                    : null\n            }\n            {\n                customerState.orders.length > 0 ?\n                    customerState.delivered.length > 0 ?\n                        customerState.delivered.map((deliver: any[], index: number) => {\n                            if (deliver[0] === props.client) {\n                                return (\n                                    <p className=\"text-muted\" key={index}>  {deliver[1]} orders has delivered.</p>\n                                )\n                            }\n                        }) : null\n                    : null\n            }\n            {\n                customerState.orders.length > 0 ?\n                    customerState.unStitch.length > 0 ?\n                        customerState.unStitch.map((unStitch: any[], index: number) => {\n                            if (unStitch[0] === props.client) {\n                                return (\n                                    <p className=\"text-muted\" key={index}>  {unStitch[1]} orders are un stitched.</p>\n                                )\n                            } else {\n                                console.log(unStitch[0], props.client);\n\n                            }\n                        }) : null\n                    : null\n            }\n            {\n                customerState.orders.length > 0 ?\n                    customerState.lost.length > 0 ?\n                        customerState.lost.map((losted: any, index: number) => {\n                            if (losted[0] === props.client) {\n                                return (\n                                    <p className=\"text-muted\" key={index}> {losted[1]} orders has losted.</p>\n                                )\n                            }\n                        }) : null\n                    : null\n            }\n            {\n                customerState.outOfOrder.length > 0 ?\n                    customerState.outOfOrder.length > 0 ?\n                        customerState.outOfOrder.map((outOfOrder: any, index: number) => {\n                            if (outOfOrder[0] === props.client) {\n                                return (\n                                    <p className=\"text-muted\" key={index}> {outOfOrder[1]} orders has wrong stitched.</p>\n                                )\n                            }\n                        }) : null\n                    : null\n            }\n        </div>\n    )\n}","/home/faiza/Documents/Git Hub/tailor_app/src/components/EditMeasurment.tsx",["115","116","117"],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"118","replacedBy":"122"},{"ruleId":"120","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":24,"column":11,"nodeType":"126","messageId":"127","endLine":24,"endColumn":30},{"ruleId":"124","severity":1,"message":"128","line":27,"column":51,"nodeType":"126","messageId":"127","endLine":27,"endColumn":55},{"ruleId":"129","severity":1,"message":"130","line":52,"column":81,"nodeType":"131","messageId":"132","endLine":52,"endColumn":83},{"ruleId":"124","severity":1,"message":"133","line":93,"column":15,"nodeType":"126","messageId":"127","endLine":93,"endColumn":28},{"ruleId":"118","replacedBy":"134"},{"ruleId":"120","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":443,"column":107,"nodeType":"138","messageId":"139","endLine":443,"endColumn":108,"fix":"140"},{"ruleId":"124","severity":1,"message":"141","line":2,"column":8,"nodeType":"126","messageId":"127","endLine":2,"endColumn":16},{"ruleId":"124","severity":1,"message":"141","line":6,"column":8,"nodeType":"126","messageId":"127","endLine":6,"endColumn":16},{"ruleId":"129","severity":1,"message":"130","line":27,"column":68,"nodeType":"131","messageId":"132","endLine":27,"endColumn":70},{"ruleId":"118","replacedBy":"142"},{"ruleId":"120","replacedBy":"143"},{"ruleId":"124","severity":1,"message":"125","line":23,"column":11,"nodeType":"126","messageId":"127","endLine":23,"endColumn":30},{"ruleId":"129","severity":1,"message":"130","line":50,"column":79,"nodeType":"131","messageId":"132","endLine":50,"endColumn":81},{"ruleId":"124","severity":1,"message":"144","line":4,"column":106,"nodeType":"126","messageId":"127","endLine":4,"endColumn":115},{"ruleId":"124","severity":1,"message":"145","line":4,"column":117,"nodeType":"126","messageId":"127","endLine":4,"endColumn":140},{"ruleId":"129","severity":1,"message":"130","line":58,"column":81,"nodeType":"131","messageId":"132","endLine":58,"endColumn":83},{"ruleId":"129","severity":1,"message":"130","line":70,"column":85,"nodeType":"131","messageId":"132","endLine":70,"endColumn":87},{"ruleId":"129","severity":1,"message":"130","line":82,"column":85,"nodeType":"131","messageId":"132","endLine":82,"endColumn":87},{"ruleId":"129","severity":1,"message":"130","line":97,"column":77,"nodeType":"131","messageId":"132","endLine":97,"endColumn":79},{"ruleId":"129","severity":1,"message":"130","line":109,"column":87,"nodeType":"131","messageId":"132","endLine":109,"endColumn":89},{"ruleId":"124","severity":1,"message":"146","line":3,"column":27,"nodeType":"126","messageId":"127","endLine":3,"endColumn":50},{"ruleId":"129","severity":1,"message":"130","line":40,"column":87,"nodeType":"131","messageId":"132","endLine":40,"endColumn":89},{"ruleId":"124","severity":1,"message":"147","line":42,"column":35,"nodeType":"126","messageId":"127","endLine":42,"endColumn":47},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],["148"],["149"],"@typescript-eslint/no-unused-vars","'saveMeasurment' is assigned a value but never used.","Identifier","unusedVar","'Bust' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'measurmentEle' is assigned a value but never used.",["148"],["149"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"150","text":"151"},"'firebase' is defined but never used.",["148"],["149"],"'checkLost' is defined but never used.","'checkOutOfOrderFirebase' is defined but never used.","'checkFirebaseMeasurment' is defined but never used.","'handleLength' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[13605,13611],"\n    ."]