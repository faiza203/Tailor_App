[{"/home/faiza/Documents/Git Hub/tailor_app/src/index.tsx":"1","/home/faiza/Documents/Git Hub/tailor_app/src/components/SignUp.tsx":"2","/home/faiza/Documents/Git Hub/tailor_app/src/components/reducer.tsx":"3","/home/faiza/Documents/Git Hub/tailor_app/src/components/store.tsx":"4","/home/faiza/Documents/Git Hub/tailor_app/src/components/Home.tsx":"5","/home/faiza/Documents/Git Hub/tailor_app/src/components/NotFound.tsx":"6","/home/faiza/Documents/Git Hub/tailor_app/src/components/DashBoard.tsx":"7","/home/faiza/Documents/Git Hub/tailor_app/src/components/index.tsx":"8","/home/faiza/Documents/Git Hub/tailor_app/src/components/Customers.tsx":"9"},{"size":364,"mtime":1606720519958,"results":"10","hashOfConfig":"11"},{"size":2018,"mtime":1606721938555,"results":"12","hashOfConfig":"11"},{"size":369,"mtime":1606720180127,"results":"13","hashOfConfig":"11"},{"size":74,"mtime":1606720472157,"results":"14","hashOfConfig":"11"},{"size":648,"mtime":1606660853253,"results":"15","hashOfConfig":"11"},{"size":457,"mtime":1606555698849,"results":"16","hashOfConfig":"11"},{"size":1946,"mtime":1606721860643,"results":"17","hashOfConfig":"11"},{"size":281,"mtime":1606721685903,"results":"18","hashOfConfig":"11"},{"size":553,"mtime":1606721675927,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"34fyjp",{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/faiza/Documents/Git Hub/tailor_app/src/index.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/SignUp.tsx",["40"],"import React, { Component } from 'react';\nimport firebase from 'firebase';\nimport { configFirebase } from './firebase';\nimport { createBrowserHistory as createHistory } from 'history'\nconst history = createHistory();\nconfigFirebase();\nconst signUpFun = (e: any) => {\n    e.preventDefault();\n    const [email, password, confirmPassword]: any[] = e.target;\n    const auth = firebase.auth();\n    if (password.value !== confirmPassword.value) {\n        alert(\"Password does not match\");\n    }\n    else {\n        const promise = auth.createUserWithEmailAndPassword(email.value, password.value)\n            .then(() => {\n                sendToFirebaseTailor(e);\n                history.push('/SignIn');\n                history.replace('/SignIn');\n            })\n            .catch((err) => {\n                alert(err.message);\n            })\n    }\n}\n\n\nconst sendToFirebaseTailor = (e : any)=>{\n     const promise = firebase.firestore().collection('tailors').doc(e.target[0].value).collection('customers').add({\n        id1 : \"id1\"\n    });\n    promise.then(() => {\n      alert(\"Account is created successfully !!!\");\n      history.push('/SignIn')  ;\n      history.replace('./SignIn') \n  })\n    .catch((err : any) => {\n      alert(err.message);\n      })\n}\nexport class SignUp extends Component {\n    render() {\n        return (\n            <form onSubmit={signUpFun}>\n                <label className=\"text-dark\">Email :</label>\n                <input className=\"form-control\" type=\"email\" placeholder=\"Please write email here\" required />\n                <label className=\"text-dark\">Password :</label>\n                <input className=\"form-control\" type=\"password\" placeholder=\"Enter password here\" required />\n                <label className=\"text-dark\">Confirm Password :</label>\n                <input className=\"form-control\" type=\"password\" placeholder=\"Rewrite password here\" required />\n                <button className=\"btn btn-outline-warning\" type=\"submit\">SignUp</button>\n            </form>\n        )\n    }\n}","/home/faiza/Documents/Git Hub/tailor_app/src/components/reducer.tsx",["41","42"],"/home/faiza/Documents/Git Hub/tailor_app/src/components/store.tsx",["43"],"/home/faiza/Documents/Git Hub/tailor_app/src/components/Home.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/NotFound.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/DashBoard.tsx",["44"],"import React, { Component } from 'react';\nimport firebase from 'firebase';\nimport { createBrowserHistory as createHistrory } from 'history';\nimport { Customers } from './index';\n// import uuid from 'uuid';\n\nconst history = createHistrory();\n\n\nconst getFromFirebase = (tailor: any) => {\n    const promise = firebase.firestore().collection('tailors').get().then(function (querySnapshot) {\n        querySnapshot.forEach((doc: any) => {\n            console.log(doc);\n        })\n    });\n    promise.then(() => {\n    })\n    promise.catch((err: any) => {\n        alert(err.message);\n    })\n}\n\nconst addCustomer = (e : any) => {\n    e.preventDefault();\n    const customer : String = e.target[0].value ;\n    console.log(customer);\n}\nexport class DashBoard extends Component {\n    render() {\n        const promise = () => {\n            firebase.database().ref().on(\"child_added\", snap => {\n                const tailor = snap.val();\n                this.setState = tailor;\n            });\n            return getFromFirebase(this.setState);\n        }\n        promise();\n        const tailor = this.setState;\n\n        return (\n            <div>\n                {\n                    typeof (tailor) !== typeof (() => { }) ?\n                        <div>\n                            <h1 className=\"h1 font-italic text-muted\">\n                                {tailor}\n                            </h1>\n\n                            <form onSubmit={addCustomer}>\n                                <input type=\"text\" placeholder=\"Add Customer Name Here\" />\n                                <button className=\"btn btn-outline-danger\">Add customer\n            </button>\n                            </form>                             <Customers />\n                        </div>\n                        : <h1 className=\"h1 font-italic text-muted\">\n                            loading\n                        </h1>\n                }\n            </div>\n        )\n    }\n}","/home/faiza/Documents/Git Hub/tailor_app/src/components/index.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/Customers.tsx",["45","46"],{"ruleId":"47","severity":1,"message":"48","line":15,"column":15,"nodeType":"49","messageId":"50","endLine":15,"endColumn":22},{"ruleId":"47","severity":1,"message":"51","line":1,"column":8,"nodeType":"49","messageId":"50","endLine":1,"endColumn":13},{"ruleId":"47","severity":1,"message":"52","line":2,"column":26,"nodeType":"49","messageId":"50","endLine":2,"endColumn":31},{"ruleId":"47","severity":1,"message":"53","line":1,"column":9,"nodeType":"49","messageId":"50","endLine":1,"endColumn":20},{"ruleId":"47","severity":1,"message":"54","line":7,"column":7,"nodeType":"49","messageId":"50","endLine":7,"endColumn":14},{"ruleId":"47","severity":1,"message":"55","line":2,"column":8,"nodeType":"49","messageId":"50","endLine":2,"endColumn":16},{"ruleId":"47","severity":1,"message":"54","line":7,"column":7,"nodeType":"49","messageId":"50","endLine":7,"endColumn":14},"@typescript-eslint/no-unused-vars","'promise' is assigned a value but never used.","Identifier","unusedVar","'React' is defined but never used.","'state' is defined but never used.","'createStore' is defined but never used.","'history' is assigned a value but never used.","'firebase' is defined but never used."]