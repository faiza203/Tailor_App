[{"/home/faiza/Documents/Git Hub/tailor_app/src/index.tsx":"1","/home/faiza/Documents/Git Hub/tailor_app/src/components/index.tsx":"2","/home/faiza/Documents/Git Hub/tailor_app/src/components/Home.tsx":"3","/home/faiza/Documents/Git Hub/tailor_app/src/components/SignIn.tsx":"4","/home/faiza/Documents/Git Hub/tailor_app/src/components/Nav.tsx":"5","/home/faiza/Documents/Git Hub/tailor_app/src/components/firebase.tsx":"6","/home/faiza/Documents/Git Hub/tailor_app/src/components/NotFound.tsx":"7","/home/faiza/Documents/Git Hub/tailor_app/src/components/AddMeasurment.tsx":"8","/home/faiza/Documents/Git Hub/tailor_app/src/components/history.tsx":"9","/home/faiza/Documents/Git Hub/tailor_app/src/components/store.tsx":"10","/home/faiza/Documents/Git Hub/tailor_app/src/components/SignUp.tsx":"11","/home/faiza/Documents/Git Hub/tailor_app/src/components/Customers.tsx":"12","/home/faiza/Documents/Git Hub/tailor_app/src/components/DashBoard.tsx":"13","/home/faiza/Documents/Git Hub/tailor_app/src/components/reducer.tsx":"14","/home/faiza/Documents/Git Hub/tailor_app/src/App.tsx":"15","/home/faiza/Documents/Git Hub/tailor_app/src/components/AddDetail.tsx":"16","/home/faiza/Documents/Git Hub/tailor_app/src/components/AddOrder.tsx":"17","/home/faiza/Documents/Git Hub/tailor_app/src/components/AlreadyMeasurment.tsx":"18","/home/faiza/Documents/Git Hub/tailor_app/src/components/Condition.tsx":"19"},{"size":330,"mtime":1606992343000,"results":"20","hashOfConfig":"21"},{"size":791,"mtime":1607436721423,"results":"22","hashOfConfig":"21"},{"size":656,"mtime":1606992343000,"results":"23","hashOfConfig":"21"},{"size":1463,"mtime":1607435945390,"results":"24","hashOfConfig":"21"},{"size":987,"mtime":1607436014526,"results":"25","hashOfConfig":"21"},{"size":562,"mtime":1606992343000,"results":"26","hashOfConfig":"21"},{"size":595,"mtime":1607251724440,"results":"27","hashOfConfig":"21"},{"size":3148,"mtime":1607429491761,"results":"28","hashOfConfig":"21"},{"size":95,"mtime":1607326904207,"results":"29","hashOfConfig":"21"},{"size":10811,"mtime":1607436994494,"results":"30","hashOfConfig":"21"},{"size":1723,"mtime":1607435958695,"results":"31","hashOfConfig":"21"},{"size":2000,"mtime":1607434249041,"results":"32","hashOfConfig":"21"},{"size":1704,"mtime":1607264523633,"results":"33","hashOfConfig":"21"},{"size":2643,"mtime":1607436304618,"results":"34","hashOfConfig":"21"},{"size":907,"mtime":1607434161875,"results":"35","hashOfConfig":"21"},{"size":1744,"mtime":1607436948306,"results":"36","hashOfConfig":"21"},{"size":1452,"mtime":1607434369573,"results":"37","hashOfConfig":"21"},{"size":1972,"mtime":1607435221982,"results":"38","hashOfConfig":"21"},{"size":4255,"mtime":1607436702203,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"34fyjp",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/faiza/Documents/Git Hub/tailor_app/src/index.tsx",[],["81","82"],"/home/faiza/Documents/Git Hub/tailor_app/src/components/index.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/Home.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/SignIn.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/Nav.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/firebase.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/NotFound.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/AddMeasurment.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/history.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/store.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/SignUp.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/Customers.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/DashBoard.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/reducer.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/App.tsx",["83"],"import React from 'react';\nimport { Router, Route, Switch } from 'react-router';\nimport { Nav, Home, SignUp, SignIn, DashBoard, NotFound, history, AddDetail , AlreadyMeasurment, AddMeasurment} from './components/index';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n\n  return (\n    <div className=\"App text-center\">\n      <Router history={history}>\n        <Nav />\n        <Switch>\n          <Route path=\"/\" component={Home} exact></Route>\n          <Route path=\"/SignUp\" component={SignUp}></Route>\n          <Route path=\"/SignIn\" component={SignIn}></Route>\n          <Route path=\"/DashBoard\" component={DashBoard}></Route>\n          <Route path=\"/Measurment\" component={AddMeasurment}></Route>\n          <Route path=\"/Orders\" component={AddDetail}></Route>\n          <Route path=\"\" component={NotFound}></Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/home/faiza/Documents/Git Hub/tailor_app/src/components/AddDetail.tsx",[],"/home/faiza/Documents/Git Hub/tailor_app/src/components/AddOrder.tsx",["84"],"import React from 'react';\nimport firebase from 'firebase';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { checkOrderFirebase } from './index';\nexport const AddOrder = (props: any) => {\n    const dispatch = useDispatch();\n    const customerState = useSelector((state: any) => state);\n    const tailor: any = localStorage.getItem(\"tailor\");\n    const promise = () => {\n        firebase.firestore().collection('Tailor App').doc(tailor).collection(\"Orders\").get()\n            .then(snapshot => {\n                snapshot.docs.forEach(client => {\n                    const clientName = client.id;\n                    const orders = client.data().orders;\n\n                    checkOrderFirebase(clientName, orders, customerState.orders, dispatch)\n                })\n            });\n    }\n    promise();\n\n    return (<div>\n        <h1 className=\"h1 text-muted\">Orders</h1>\n        <p className=\"text-muted\">If you want to stitch new dress: </p>\n        <input className=\"d-inline form-control\" type=\"text\" placeholder=\"Add number of orders here\" />\n        {customerState.orders.length > 0 ?\n            customerState.orders.map((order: any[], index: number) => {\n                if (order[0] === props.client) {\n                    return (\n                        <p key={index} className=\"text-muted mt-1\">Already Orders are {order[1]}</p>\n                    )\n                }\n            }) :\n            null\n        }\n    </div>)\n}","/home/faiza/Documents/Git Hub/tailor_app/src/components/AlreadyMeasurment.tsx",["85","86"],"/home/faiza/Documents/Git Hub/tailor_app/src/components/Condition.tsx",["87","88","89"],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":3,"column":79,"nodeType":"96","messageId":"97","endLine":3,"endColumn":96},{"ruleId":"98","severity":1,"message":"99","line":27,"column":68,"nodeType":"100","messageId":"101","endLine":27,"endColumn":70},{"ruleId":"94","severity":1,"message":"102","line":3,"column":10,"nodeType":"96","messageId":"97","endLine":3,"endColumn":23},{"ruleId":"98","severity":1,"message":"99","line":26,"column":85,"nodeType":"100","messageId":"101","endLine":26,"endColumn":87},{"ruleId":"98","severity":1,"message":"99","line":52,"column":77,"nodeType":"100","messageId":"101","endLine":52,"endColumn":79},{"ruleId":"98","severity":1,"message":"99","line":64,"column":81,"nodeType":"100","messageId":"101","endLine":64,"endColumn":83},{"ruleId":"98","severity":1,"message":"99","line":76,"column":81,"nodeType":"100","messageId":"101","endLine":76,"endColumn":83},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"@typescript-eslint/no-unused-vars","'AlreadyMeasurment' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'AddMeasurment' is defined but never used.","no-global-assign","no-unsafe-negation"]